{"version":3,"sources":["components/hooks/useCharacterBonus.tsx","components/hooks/useCharactersMetadata.tsx","components/hooks/useFragmentsMetadata.tsx","components/hooks/useStagesMetadata.tsx","components/SiteAppBar.tsx","context/createCtx.tsx","context/filterContext.tsx","context/metadataContext.tsx","filters/timeFilters.tsx","filters/filterColours.tsx","filters/storyFilters.tsx","filters/index.tsx","components/hooks/useFilteredData.tsx","components/hooks/useFilters.tsx","components/hooks/useLocalStorage.tsx","components/hooks/useRoster.tsx","components/hooks/useStageGroupedData.tsx","components/TableFilterSection.tsx","components/TableToolbar.tsx","pages/autoplay/CharacterTextLabel.tsx","pages/autoplay/leadCalculator.ts","pages/autoplay/LeaderTable.tsx","pages/autoplay/CharacterSelector.tsx","pages/autoplay/TeamSelector.tsx","pages/autoplay/AutoplayPage.tsx","pages/manage/RosterManagement.tsx","pages/manage/ManagePage.tsx","components/FilterSection.tsx","components/AreaBumpChart.tsx","components/BarChart.tsx","components/hooks/useRankTableData.tsx","components/hooks/useAreaBumpData.tsx","components/hooks/useBarChartData.tsx","components/GraphCard.tsx","components/RankTable.tsx","components/RankTableCard.tsx","pages/stats/StatsPage.tsx","pages/HomePage.tsx","filters/fragmentFilters.tsx","theme.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useCharacterBonus","useQuery","a","fetch","res","json","useCharactersMetadata","useFragmentMetadata","useStagesMetadata","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","button","color","palette","getContrastText","primary","main","SiteAppBar","classes","AppBar","position","Toolbar","Typography","variant","className","Button","component","RouterLink","to","size","IconButton","target","href","createCtx","reducer","initialState","ctx","React","createContext","state","dispatch","props","useReducer","Provider","value","action","type","filters","undefined","find","f","id","filterId","map","enabled","filter","s","Error","FilterProvider","FilterContext","stages","characters","fragments","data","distinctDates","d","i","arr","findIndex","t","date","Date","sort","b","getTime","currentMonth","length","toISOString","stories","MetadataProvider","MetadataContext","currentMonthFilter","label","canDelete","predicate","term","metadata","theDate","current","getMonth","getFullYear","timeFilters","filterColourMap","dimensionalClashdFilter","stageId","colour","trueShieldFilter","allWarFilter","futureEndsHereFilter","storyFilters","allFilters","useFilteredData","useContext","useState","filteredData","setFilteredData","useEffect","enabledFilters","fragmentFilters","startsWith","enabledFragmentFilters","some","filterGroups","every","fg","ef","filterData","setFilterState","filterDisabled","useFilters","setFilters","enableFilter","useCallback","disableFilter","useLocalStorage","key","defaultValue","saved","localStorage","getItem","JSON","parse","getStorageValue","setValue","setItem","stringify","defaultRoster","unowned","useRoster","roster","setRoster","setOwned","characterId","isOwned","hasOwnProperty","useStageGroupedData","groupedData","setGroupData","preparedData","Array","from","reduce","acc","val","character","c","stage","currentStageGroupedItem","get","set","characterId1","character1","characterId2","characterId3","character2","character3","Map","prepare","toolbar","backgroundColor","padding","paddingLeft","paddingBottom","marginTop","minHeight","chip","margin","chipHidden","display","TableFilterSection","onFilterClick","clsx","Chip","hidden","onClick","handleClick","style","useToolbarStyles","paddingRight","flex","TableToolbar","CharacterTextLabel","name","leadCalculator","stageData","teamCharacterId1","teamCharacterId2","teamCharacterId3","position1","position2","position3","width","paper","marginBottom","table","minWidth","visuallyHidden","border","clip","height","overflow","top","leader","light","red","unownedLabel","error","textDecoration","timeFilter","LeaderTable","team","Paper","TableContainer","Table","TableHead","TableRow","TableCell","fontWeight","TableBody","row","hover","subStage","CharacterSelector","onCharacterChange","Autocomplete","onChange","event","options","getOptionLabel","option","renderInput","params","TextField","selects","flexDirection","gap","TeamSelector","onTeamChange","setTeam","handleCharacterChange","index","updatedTeam","AutoplayPage","isLoading","teamCharacters","setTeamCharacters","Grid","container","item","lg","RosterManagement","advancementType","Switch","checked","ManagePage","flexWrap","transition","transitions","create","easing","easeInOut","duration","short","toolbarHidden","easeIn","FilterSection","visible","isVisible","setIsVisible","onDelete","chipId","forEach","AreaBumpChart","areaBumpData","right","bottom","left","colors","scheme","blendMode","startLabel","axisTop","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","format","moment","axisBottom","getColour","bar","BarChart","memo","keys","flatMap","Object","Set","k","getKeys","indexBy","axisLeft","e","Math","floor","valueScale","labelSkipWidth","labelSkipHeight","labelTextColor","useRankTableData","rankData","setRankData","currentCount","characterName","count","useAreaBumpData","setAreaBumpData","top10","slice","areaData","uniqueDates","usageData","x","y","dataPoint","updatedDataPoint","story","currentCharacterItem","barCountItem","storyCharacterCount","useBarChartData","barData","setBarData","graphContainer","justifyContent","alignItems","graphSkeleteon","transform","GraphCard","metadataContext","filterContext","showTreemap","Skeleton","tableContainer","RankTable","rankedData","stickyHeader","align","scope","card","cardContent","float","contentContainer","RankTableCard","Card","CardHeader","animation","CardContent","_val","Fragment","StatsPage","xs","md","createStyles","HomePage","filterDispatch","stageMetadata","isStageMetadataLoading","characterMetadata","isCharacterMetadataLoading","fragmentMetadata","isFragmentMetadataLoading","isDataLoading","fragment","stageIds","includes","path","element","createMuiTheme","purple","secondary","green","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","App","QueryClientProvider","client","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbad2d07.chunk.js","sourcesContent":["import { useQuery } from 'react-query';\n\nconst useCharacterBonus = () => {\n  return useQuery('characterBonus', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/selectedcharacterbonus.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharacterBonus;\n","import { useQuery } from 'react-query';\n\nconst useCharactersMetadata = () => {\n  return useQuery('characters', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/characters.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharactersMetadata;\n","import { useQuery } from 'react-query';\n\nconst useFragmentMetadata = () => {\n  return useQuery('fragments', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/fragments.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useFragmentMetadata;\n","import { useQuery } from 'react-query';\n\nconst useStagesMetadata = () => {\n  return useQuery('stages', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/stages.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useStagesMetadata;\n","import {\n  AppBar,\n  Button,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  button: {\n    color: theme.palette.getContrastText(theme.palette.primary.main),\n  },\n}));\n\nconst SiteAppBar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}></Typography>\n        <Button\n          component={RouterLink}\n          to={'/'}\n          variant={'text'}\n          className={classes.button}\n          size={'large'}\n        >\n          Stats\n        </Button>\n        <Button\n          component={RouterLink}\n          to={'/autoplay'}\n          variant={'text'}\n          className={classes.button}\n          size={'large'}\n        >\n          Autoplay\n        </Button>\n        <Button\n          component={RouterLink}\n          to={'/manage'}\n          variant={'text'}\n          className={classes.button}\n          size={'large'}\n        >\n          Manage\n        </Button>\n        <IconButton\n          color=\"inherit\"\n          target=\"_blank\"\n          href={'https://github.com/chrischen86/mff-app'}\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SiteAppBar;\n","import React from 'react';\n\nexport default function createCtx<StateType, ActionType>(\n  reducer: React.Reducer<StateType, ActionType>,\n  initialState: StateType\n) {\n  const defaultDispatch: React.Dispatch<ActionType> = () => initialState; // we never actually use this\n  const ctx = React.createContext({\n    state: initialState,\n    dispatch: defaultDispatch, // just to mock out the dispatch type and make it not optioanl\n  });\n\n  function Provider(props: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer<\n      React.Reducer<StateType, ActionType>\n    >(reducer, initialState);\n    return <ctx.Provider value={{ state, dispatch }} {...props} />;\n  }\n  return [ctx, Provider] as const;\n}\n","import createCtx from './createCtx';\nimport { Filter } from '../filters/types';\n\nconst initialState: { filters: Filter[] } = {\n  filters: [],\n};\ntype FilterState = typeof initialState;\ntype Action =\n  | { type: 'add'; filters: Filter[] }\n  | { type: 'remove'; filters: Filter[] }\n  | { type: 'enable'; filterId: string }\n  | { type: 'disable'; filterId: string };\n\nconst reducer = (state: FilterState, action: Action): FilterState => {\n  switch (action.type) {\n    case 'add':\n      return {\n        ...state,\n        filters: action.filters,\n      };\n    case 'enable':\n    case 'disable': {\n      const filter = state.filters.find((f) => f.id === action.filterId);\n      if (filter === undefined) {\n        return state;\n      }\n\n      return {\n        ...state,\n        filters: state.filters.map((f) => {\n          return f.id === action.filterId\n            ? {\n                ...f,\n                enabled: action.type === 'disable' ? false : true,\n              }\n            : f;\n        }),\n      };\n    }\n    case 'remove':\n      return {\n        ...state,\n        filters: [\n          ...state.filters.filter((f) =>\n            action.filters.find((s) => s.id === f.id)\n          ),\n        ],\n      };\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, FilterProvider] = createCtx(reducer, initialState);\nexport const FilterContext = ctx;\n\nexport default FilterProvider;\n","import {\n  Character,\n  Stage,\n  SelectedCharacterBonus,\n  Metadata,\n  StoryFragment,\n} from '../types';\nimport createCtx from './createCtx';\n\nconst initialState: Metadata = {\n  stages: [],\n  characters: [],\n  stories: [],\n  fragments: [],\n  currentMonth: undefined,\n};\n\ntype MetadataState = typeof initialState;\ntype Action =\n  | { type: 'setStages'; stages: Stage[] }\n  | { type: 'setCharacters'; characters: Character[] }\n  | { type: 'setFragments'; fragments: StoryFragment[] }\n  | { type: 'calculateLastMonth'; data: SelectedCharacterBonus[] };\n\nconst reducer = (state: MetadataState, action: Action): MetadataState => {\n  switch (action.type) {\n    case 'setStages':\n      return {\n        ...state,\n        stages: action.stages,\n      };\n    case 'setCharacters':\n      return {\n        ...state,\n        characters: action.characters,\n      };\n    case 'setFragments':\n      return {\n        ...state,\n        fragments: action.fragments,\n      };\n    case 'calculateLastMonth': {\n      if (action.data === undefined) {\n        return state;\n      }\n      const distinctDates = action.data\n        .filter((d, i, arr) => arr.findIndex((t) => t.date === d.date) === i)\n        .map((d) => new Date(d.date))\n        .sort((a, b) => {\n          return a.getTime() - b.getTime();\n        });\n\n      return {\n        ...state,\n        currentMonth: distinctDates[distinctDates.length - 1].toISOString(),\n      };\n    }\n\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, MetadataProvider] = createCtx(reducer, initialState);\nexport const MetadataContext = ctx;\n\nexport default MetadataProvider;\n","import { Metadata, SelectedCharacterBonus } from '../types';\nimport { Filter } from './types';\n\nconst currentMonthFilter: Filter = {\n  id: 'currentMonth',\n  label: 'Current Month',\n  enabled: true,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus, metadata: Metadata) => {\n    const theDate = new Date(term.date);\n    const current =\n      metadata.currentMonth === undefined\n        ? new Date()\n        : new Date(metadata.currentMonth);\n\n    return (\n      theDate.getMonth() === current.getMonth() &&\n      theDate.getFullYear() === current.getFullYear()\n    );\n  },\n};\nexport { currentMonthFilter };\n\nconst allTimeFilter: Filter = {\n  id: 'allTime',\n  label: 'All Time',\n  enabled: false,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus) => {\n    return true;\n  },\n};\nexport { allTimeFilter };\nconst timeFilters = [currentMonthFilter, allTimeFilter];\nexport default timeFilters;\n","const futureColour = '#23a5d7';\nconst warColour = '#6d1895';\nconst shieldColour = '#3b7d57';\nconst dimensionColour = '#bf0001';\n\nconst filterColourMap: { [key: string]: string } = {\n  'Dimensional Clash': dimensionColour,\n  'The True SHIELD': shieldColour,\n  'The All War': warColour,\n  'The Future Ends Here': futureColour,\n};\n\nexport default filterColourMap;\n","import { SelectedCharacterBonus } from '../types';\nimport filterColourMap from './filterColours';\nimport { Filter } from './types';\n\nconst dimensionalClashdFilter: Filter = {\n  id: 'dimensionalClash',\n  label: 'Dimensional Clash',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId <= 20;\n  },\n  colour: filterColourMap['Dimensional Clash'],\n};\nexport { dimensionalClashdFilter };\n\nconst trueShieldFilter: Filter = {\n  id: 'trueShield',\n  label: 'The True SHIELD',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 21 && term.stageId <= 24;\n  },\n  colour: filterColourMap['The True SHIELD'],\n};\nexport { trueShieldFilter };\n\nconst allWarFilter: Filter = {\n  id: 'allWar',\n  label: 'The All War',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 25 && term.stageId <= 28;\n  },\n  colour: filterColourMap['The All War'],\n};\nexport { allWarFilter };\n\nconst futureEndsHereFilter: Filter = {\n  id: 'futureEndsHere',\n  label: 'The Future Ends Here',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 29;\n  },\n  colour: filterColourMap['The Future Ends Here'],\n};\nexport { futureEndsHereFilter };\n\nconst storyFilters = [\n  dimensionalClashdFilter,\n  trueShieldFilter,\n  allWarFilter,\n  futureEndsHereFilter,\n];\nexport default storyFilters;\n","import timeFilters from './timeFilters';\nimport storyFilters from './storyFilters';\nimport { createFragmentFilters } from './fragmentFilters';\n\nexport { createFragmentFilters };\n\nconst allFilters = [...timeFilters, ...storyFilters];\nexport default allFilters;\n","import storyFilters from '../../filters/storyFilters';\nimport timeFilters from '../../filters/timeFilters';\nimport { Filter } from '../../filters/types';\nimport { Metadata, SelectedCharacterBonus } from '../../types';\nimport React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\n\nconst filterData = (\n  data: SelectedCharacterBonus[],\n  filters: Filter[],\n  metadata: Metadata\n): SelectedCharacterBonus[] => {\n  const enabledFilters = filters.filter((f) => f.enabled);\n  const fragmentFilters = filters.filter((f) => f.id.startsWith('fragment'));\n\n  const enabledFragmentFilters = fragmentFilters.some((f) => f.enabled);\n\n  let filterGroups = [timeFilters, storyFilters];\n  if (enabledFragmentFilters) {\n    filterGroups = [...filterGroups, fragmentFilters];\n  }\n  const filteredData = data.filter((d) =>\n    filterGroups.every((fg) =>\n      fg\n        .filter((f) => enabledFilters?.find((ef) => ef.id === f.id))\n        .some((f) => f.predicate(d, metadata))\n    )\n  );\n\n  return filteredData;\n};\n\nconst useFilteredData = (\n  data?: SelectedCharacterBonus[],\n  filters?: Filter[]\n): SelectedCharacterBonus[] => {\n  const { state: metadata } = React.useContext(MetadataContext);\n  const [filteredData, setFilteredData] = React.useState<\n    SelectedCharacterBonus[]\n  >([]);\n\n  React.useEffect(() => {\n    if (data === undefined) {\n      setFilteredData([]);\n    } else if (filters === undefined || filters.length <= 0) {\n      setFilteredData(data);\n    } else {\n      setFilteredData(filterData(data, filters, metadata));\n    }\n  }, [data, filters, metadata]);\n\n  return filteredData;\n};\n\nexport default useFilteredData;\n","import React from 'react';\nimport { Filter } from '../../filters/types';\n\nconst setFilterState = (\n  filters: Filter[],\n  filterId: string,\n  filterDisabled: boolean = false\n) => {\n  const filter = filters.find((f) => f.id === filterId);\n  if (filter === undefined) {\n    return filters;\n  }\n\n  return filters.map((f) => {\n    return f.id === filterId\n      ? {\n          ...f,\n          enabled: !filterDisabled,\n        }\n      : f;\n  });\n};\n\nconst useFilters = () => {\n  const [filters, setFilters] = React.useState<Filter[]>([]);\n\n  const enableFilter = React.useCallback(\n    (filterId: string) => {\n      setFilters(setFilterState(filters, filterId, false));\n    },\n    [filters]\n  );\n\n  const disableFilter = React.useCallback(\n    (filterId: string) => {\n      setFilters(setFilterState(filters, filterId, true));\n    },\n    [filters]\n  );\n\n  return { filters, setFilters, enableFilter, disableFilter };\n};\n\nexport default useFilters;\n","import React from 'react';\n\nconst getStorageValue = (key: string, defaultValue: any) => {\n  const saved: any = localStorage.getItem(key);\n  const initial = JSON.parse(saved);\n  return initial || defaultValue;\n};\n\nconst useLocalStorage = <T,>(key: string, defaultValue: any) => {\n  const [value, setValue] = React.useState<T>(() => {\n    return getStorageValue(key, defaultValue);\n  });\n\n  React.useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return { value, setValue };\n};\nexport default useLocalStorage;\n","import { Roster } from '../types';\nimport useLocalStorage from './useLocalStorage';\n\nconst defaultRoster: Roster = { unowned: {} };\n\nconst useRoster = () => {\n  const { value: roster, setValue: setRoster } = useLocalStorage<Roster>(\n    'roster',\n    defaultRoster\n  );\n\n  const setOwned = (characterId: string, isOwned: boolean = true) => {\n    const { unowned } = roster;\n    if (isOwned) {\n      delete unowned[characterId];\n    } else {\n      if (!unowned.hasOwnProperty(characterId)) {\n        unowned[characterId] = true;\n      }\n    }\n    setRoster({ ...roster, unowned });\n  };\n\n  const isOwned = (characterId: string | null): boolean => {\n    const { unowned } = roster;\n    return !unowned.hasOwnProperty(characterId ?? '');\n  };\n\n  return { roster, setOwned, isOwned };\n};\n\nexport default useRoster;\n","import React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\nimport { Metadata, SelectedCharacterBonus } from '../../types';\nimport { StageGroupedData } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): StageGroupedData[] => {\n  const groupedData = Array.from(\n    data.reduce((acc, val) => {\n      const character = metadata.characters.find(\n        (c) => c.id === val.characterId\n      );\n\n      const stage = metadata.stages.find((s) => s.id === val.stageId);\n\n      const currentStageGroupedItem = acc.get(val.stageId);\n      if (currentStageGroupedItem === undefined) {\n        acc.set(val.stageId, {\n          stageId: val.stageId,\n          stage,\n          characterId1: val.characterId,\n          character1: character,\n          characterId2: null,\n          characterId3: null,\n        });\n      } else {\n        acc.set(val.stageId, {\n          ...currentStageGroupedItem,\n          characterId2: currentStageGroupedItem.characterId2 || val.characterId,\n          character2: currentStageGroupedItem.character2 || character,\n          characterId3:\n            currentStageGroupedItem.characterId3 ||\n            (currentStageGroupedItem.characterId2 && val.characterId),\n          character3:\n            currentStageGroupedItem.character3 ||\n            (currentStageGroupedItem.character2 && character),\n        });\n      }\n\n      return acc;\n    }, new Map<number, StageGroupedData>()),\n    ([key, value]) => ({ ...value })\n  );\n\n  return groupedData;\n};\n\nconst useStageGroupedData = (\n  data: SelectedCharacterBonus[]\n): StageGroupedData[] => {\n  const { state: metadata } = React.useContext(MetadataContext);\n  const [groupedData, setGroupData] = React.useState<StageGroupedData[]>([]);\n\n  React.useEffect(() => {\n    if (data !== undefined) {\n      const preparedData = prepare(data, metadata);\n      setGroupData(preparedData);\n    }\n  }, [data, metadata]);\n\n  return groupedData;\n};\n\nexport default useStageGroupedData;\n","import { Chip, Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Filter } from '../filters/types';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    backgroundColor: 'inherit',\n    padding: 0,\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    marginTop: theme.spacing(-1),\n    minHeight: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  chipHidden: {\n    display: 'none',\n  },\n}));\n\nconst TableFilterSection = ({\n  filters = [],\n  onFilterClick,\n}: {\n  filters: Filter[];\n  onFilterClick?: Function;\n}) => {\n  const classes = useStyles();\n\n  const handleClick = (filter: Filter) => {\n    if (onFilterClick !== undefined) {\n      onFilterClick(filter);\n    }\n  };\n\n  if (filters.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Toolbar className={clsx(classes.toolbar)}>\n      {filters.map((filter) => {\n        return (\n          <Chip\n            key={filter.id}\n            label={filter.label}\n            className={clsx(classes.chip, filter.hidden && classes.chipHidden)}\n            onClick={() => handleClick(filter)}\n            color={filter.enabled ? 'primary' : undefined}\n            size={'small'}\n            style={{\n              backgroundColor: filter.enabled ? filter.colour : undefined,\n            }}\n          />\n        );\n      })}\n    </Toolbar>\n  );\n};\n\nexport default TableFilterSection;\n","import { Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst TableToolbar = ({ title }: { title: string }) => {\n  const classes = useToolbarStyles();\n  return (\n    <Toolbar className={classes.root}>\n      <Typography\n        variant=\"h5\"\n        id=\"tableTitle\"\n        component=\"div\"\n        className={classes.title}\n      >\n        {title}\n      </Typography>\n    </Toolbar>\n  );\n};\n\nexport default TableToolbar;\n","import React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\n\nconst CharacterTextLabel = ({\n  characterId,\n}: {\n  characterId: string | null;\n}) => {\n  const {\n    state: { characters },\n  } = React.useContext(MetadataContext);\n\n  const character = characters.find((c) => characterId === c.id);\n  if (character === undefined) {\n    return <>{characterId}</>;\n  }\n  return <>{character.name}</>;\n};\n\nexport default CharacterTextLabel;\n","import { Roster, StageGroupedData } from '../../components/types';\n\nconst leadCalculator = (\n  stageData: StageGroupedData,\n  teamCharacterId1: string | null = null,\n  teamCharacterId2: string | null = null,\n  teamCharacterId3: string | null = null,\n  roster?: Roster\n) => {\n  let {\n    characterId1: position1,\n    characterId2: position2,\n    characterId3: position3,\n  } = stageData;\n\n  if (roster !== undefined) {\n    const { unowned } = roster;\n    if (position1 && unowned.hasOwnProperty(position1)) {\n      position1 = teamCharacterId1;\n    }\n\n    if (position2 && unowned.hasOwnProperty(position2)) {\n      position2 = teamCharacterId2;\n    }\n\n    if (position3 && unowned.hasOwnProperty(position3)) {\n      position3 = teamCharacterId3;\n    }\n  }\n\n  if (!teamCharacterId1 && !teamCharacterId2 && !teamCharacterId3) {\n    return { position1, position2, position3 };\n  }\n\n  if (teamCharacterId3 === position1) {\n    position1 = position3;\n    position3 = teamCharacterId3;\n  } else if (teamCharacterId3 === position2) {\n    position2 = position3;\n    position3 = teamCharacterId3;\n  }\n\n  if (teamCharacterId2 === position1) {\n    position1 = position2;\n    position2 = teamCharacterId2;\n  } else if (teamCharacterId2 === position3) {\n    position3 = position2;\n    position2 = teamCharacterId2;\n  }\n\n  if (teamCharacterId1 === position2) {\n    position2 = position1;\n    position1 = teamCharacterId1;\n  } else if (teamCharacterId1 === position3) {\n    position3 = position1;\n    position1 = teamCharacterId1;\n  }\n  return { position1, position2, position3 };\n};\n\nexport default leadCalculator;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport React from 'react';\nimport useFilteredData from '../../components/hooks/useFilteredData';\nimport useFilters from '../../components/hooks/useFilters';\nimport useRoster from '../../components/hooks/useRoster';\nimport useStageGroupedData from '../../components/hooks/useStageGroupedData';\nimport TableFilterSection from '../../components/TableFilterSection';\nimport TableToolbar from '../../components/TableToolbar';\nimport {\n  allWarFilter,\n  dimensionalClashdFilter,\n  futureEndsHereFilter,\n  trueShieldFilter,\n} from '../../filters/storyFilters';\nimport { currentMonthFilter } from '../../filters/timeFilters';\nimport { Filter } from '../../filters/types';\nimport { SelectedCharacterBonus } from '../../types';\nimport CharacterTextLabel from './CharacterTextLabel';\nimport leadCalculator from './leadCalculator';\nimport red from '@material-ui/core/colors/red';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  leader: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light),\n  },\n  unowned: {\n    backgroundColor: red[100],\n    color: theme.palette.getContrastText(red[100]),\n  },\n  unownedLabel: {\n    color: theme.palette.error.main,\n    textDecoration: 'line-through',\n  },\n}));\n\nconst timeFilter = { ...currentMonthFilter, hidden: true };\n\nconst LeaderTable = ({\n  data,\n  team,\n}: {\n  data: SelectedCharacterBonus[];\n  team: (string | null)[];\n}) => {\n  const classes = useStyles();\n  const { filters, setFilters } = useFilters();\n  const filteredData = useFilteredData(data, filters);\n  const groupedData = useStageGroupedData(filteredData);\n  const { roster, isOwned } = useRoster();\n\n  React.useEffect(() => {\n    setFilters([\n      timeFilter,\n      dimensionalClashdFilter,\n      { ...trueShieldFilter, enabled: false },\n      { ...allWarFilter, enabled: false },\n      { ...futureEndsHereFilter, enabled: false },\n    ]);\n  }, [setFilters]);\n\n  const handleFilterClick = (filter: Filter) => {\n    setFilters([\n      timeFilter,\n      ...filters\n        .filter((f) => f.id !== timeFilter.id)\n        .map((f) => {\n          return {\n            ...f,\n            enabled: filter.id === f.id,\n          };\n        }),\n    ]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableToolbar title={'Autoplay Story Leader'} />\n        <TableFilterSection\n          filters={filters}\n          onFilterClick={handleFilterClick}\n        />\n        <TableContainer>\n          <Table size={'small'}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Stage</TableCell>\n                <TableCell>Character 1</TableCell>\n                <TableCell>Character 2</TableCell>\n                <TableCell>Character 3</TableCell>\n                <TableCell style={{ fontWeight: 'bold' }}>Leader</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {groupedData.map((row) => {\n                const { position1: leader } = leadCalculator(\n                  row,\n                  team[0],\n                  team[1],\n                  team[2],\n                  roster\n                );\n\n                return (\n                  <TableRow key={row.stageId} hover>\n                    <TableCell>\n                      {row.stage\n                        ? `${row.stage.stage}-${row.stage.subStage}`\n                        : row.stageId}\n                    </TableCell>\n                    <TableCell\n                      className={clsx(\n                        !isOwned(row.characterId1) && classes.unownedLabel\n                      )}\n                    >\n                      {row.character1 ? row.character1.name : row.characterId1}\n                    </TableCell>\n                    <TableCell\n                      className={clsx(\n                        !isOwned(row.characterId2) && classes.unownedLabel\n                      )}\n                    >\n                      {row.character2 ? row.character2.name : row.characterId2}\n                    </TableCell>\n                    <TableCell\n                      className={clsx(\n                        !isOwned(row.characterId3) && classes.unownedLabel\n                      )}\n                    >\n                      {row.character3 ? row.character3.name : row.characterId3}\n                    </TableCell>\n                    <TableCell\n                      className={clsx(\n                        row.characterId1 !== leader && classes.leader,\n                        leader === null && classes.unowned\n                      )}\n                    >\n                      <CharacterTextLabel characterId={leader ?? 'LEAD'} />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default LeaderTable;\n","import { TextField } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Character } from '../../types';\n\nconst CharacterSelector = ({\n  characters,\n  label,\n  value = null,\n  onCharacterChange,\n}: {\n  characters: Character[];\n  label: string;\n  value: Character | null;\n  onCharacterChange?: Function;\n}) => {\n  const handleOnChange = (event: any, character: Character | null) => {\n    if (onCharacterChange !== undefined) {\n      onCharacterChange(character);\n    }\n  };\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={handleOnChange}\n      options={characters}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => (\n        <TextField {...params} label={label} variant=\"outlined\" />\n      )}\n    />\n  );\n};\n\nexport default CharacterSelector;\n","import { Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\nimport { Character } from '../../types';\nimport CharacterSelector from './CharacterSelector';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '90%',\n  },\n  paper: {\n    width: '100%',\n    padding: theme.spacing(2),\n  },\n  selects: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2),\n  },\n  title: {\n    paddingRight: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nconst TeamSelector = ({ onTeamChange }: { onTeamChange?: Function }) => {\n  const classes = useStyles();\n  const {\n    state: { characters },\n  } = React.useContext(MetadataContext);\n\n  const [team, setTeam] = React.useState<(Character | null)[]>([\n    null,\n    null,\n    null,\n  ]);\n\n  const handleCharacterChange = (character: Character, index: number) => {\n    const updatedTeam = [...team];\n    updatedTeam[index] = character;\n    setTeam(updatedTeam);\n\n    if (onTeamChange !== undefined) {\n      onTeamChange(updatedTeam.map((t) => t?.id));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant={'h5'} className={classes.title}>\n          Team Configuration\n        </Typography>\n        <div className={classes.selects}>\n          <CharacterSelector\n            characters={characters}\n            label={'Lead'}\n            value={team[0]}\n            onCharacterChange={(character: Character) =>\n              handleCharacterChange(character, 0)\n            }\n          />\n          <CharacterSelector\n            characters={characters}\n            label={'2nd'}\n            value={team[1]}\n            onCharacterChange={(character: Character) =>\n              handleCharacterChange(character, 1)\n            }\n          />\n          <CharacterSelector\n            characters={characters}\n            label={'3rd'}\n            value={team[2]}\n            onCharacterChange={(character: Character) =>\n              handleCharacterChange(character, 2)\n            }\n          />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default TeamSelector;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { SelectedCharacterBonus } from '../../types';\nimport LeaderTable from './LeaderTable';\nimport TeamSelector from './TeamSelector';\n\nconst AutoplayPage = ({\n  data,\n  isLoading,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading: boolean;\n}) => {\n  const [teamCharacters, setTeamCharacters] = React.useState<(string | null)[]>(\n    [null, null, null]\n  );\n\n  const handleTeamChange = (characters: string[]) => {\n    setTeamCharacters(characters);\n  };\n\n  if (isLoading) {\n    return <div />;\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item lg={8}>\n          <LeaderTable data={data} team={teamCharacters} />\n        </Grid>\n        <Grid item lg={4}>\n          <TeamSelector onTeamChange={handleTeamChange} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default AutoplayPage;\n","import {\n  makeStyles,\n  Paper,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport React from 'react';\nimport useRoster from '../../components/hooks/useRoster';\nimport TableToolbar from '../../components/TableToolbar';\nimport { Character } from '../../types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  leader: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light),\n  },\n}));\n\nconst RosterManagement = ({ characters }: { characters: Character[] }) => {\n  const classes = useStyles();\n  const { roster, setOwned } = useRoster();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableToolbar title={'Roster Management'} />\n        <TableContainer>\n          <Table size={'small'}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Advancement</TableCell>\n                <TableCell>Owned?</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {characters.map((row) => {\n                const handleOnChange = (\n                  event: React.ChangeEvent<HTMLInputElement>\n                ) => {\n                  setOwned(row.id, event.target.checked);\n                };\n\n                return (\n                  <TableRow key={row.id} hover>\n                    <TableCell>{row.name}</TableCell>\n                    <TableCell>{row.advancementType}</TableCell>\n                    <TableCell>\n                      <Switch\n                        checked={!roster.unowned.hasOwnProperty(row.id)}\n                        onChange={handleOnChange}\n                      />\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  );\n};\n\nexport default RosterManagement;\n","import React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\nimport RosterManagement from './RosterManagement';\n\nconst ManagePage = () => {\n  const {\n    state: { characters },\n  } = React.useContext(MetadataContext);\n\n  return <RosterManagement characters={characters} />;\n};\n\nexport default ManagePage;\n","import { Toolbar, IconButton, Chip } from '@material-ui/core';\nimport React from 'react';\nimport { Filter } from '../filters/types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport FilterIcon from '@material-ui/icons/FilterList';\nimport { FilterContext } from '../context/filterContext';\nimport timeFilters from '../filters/timeFilters';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    backgroundColor: '#f5f5f5',\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n    position: 'sticky',\n  },\n  toolbarHidden: {\n    backgroundColor: 'inherit',\n    padding: 0,\n    paddingLeft: theme.spacing(0.5),\n    minHeight: 0,\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  chipHidden: {\n    display: 'none',\n  },\n}));\n\nconst FilterSection = ({ visible = false }: { visible?: boolean }) => {\n  const [isVisible, setIsVisible] = React.useState(visible);\n  const { state, dispatch } = React.useContext(FilterContext);\n  const classes = useStyles();\n\n  const handleDelete = (chipId: string) => {\n    dispatch({\n      type: 'disable',\n      filterId: chipId,\n    });\n  };\n\n  const handleClick = (filter: Filter) => {\n    if (timeFilters.find((f) => f.id === filter.id)) {\n      const others = timeFilters.filter((f) => f.id !== filter.id);\n      others.forEach((f) => {\n        dispatch({\n          type: filter.enabled ? 'enable' : 'disable',\n          filterId: f.id,\n        });\n      });\n    }\n    dispatch({\n      type: filter.enabled ? 'disable' : 'enable',\n      filterId: filter.id,\n    });\n  };\n\n  if (!isVisible && state.filters.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.toolbar, !isVisible && classes.toolbarHidden)}\n    >\n      <IconButton onClick={() => setIsVisible(!isVisible)}>\n        <FilterIcon />\n      </IconButton>\n      {state.filters?.map((filter) => {\n        return (\n          <Chip\n            key={filter.id}\n            label={filter.label}\n            className={clsx(\n              classes.chip,\n              !isVisible && !filter.enabled && classes.chipHidden\n            )}\n            onDelete={\n              !isVisible && filter.canDelete\n                ? () => handleDelete(filter.id)\n                : undefined\n            }\n            onClick={isVisible ? () => handleClick(filter) : undefined}\n            color={filter.enabled ? 'primary' : undefined}\n            size={isVisible ? 'medium' : 'small'}\n            style={{\n              backgroundColor: filter.enabled ? filter.colour : undefined,\n            }}\n          />\n        );\n      })}\n    </Toolbar>\n  );\n};\n\nexport default FilterSection;\n","import React from 'react';\nimport { AreaBumpInputSerie, ResponsiveAreaBump } from '@nivo/bump';\nimport moment from 'moment';\n\nconst AreaBumpChart = ({\n  areaBumpData,\n}: {\n  areaBumpData: AreaBumpInputSerie[];\n}) => {\n  return (\n    <ResponsiveAreaBump\n      data={areaBumpData}\n      margin={{ top: 40, right: 100, bottom: 40, left: 100 }}\n      spacing={8}\n      colors={{ scheme: 'nivo' }}\n      blendMode=\"multiply\"\n      startLabel=\"id\"\n      axisTop={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Top 10 Ranking Over Time',\n        legendPosition: 'middle',\n        legendOffset: -28,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n    />\n  );\n};\n\nexport default AreaBumpChart;\n","import { ResponsiveBar } from '@nivo/bar';\nimport React from 'react';\nimport { BarItem } from './types';\n\nimport filterColourMap from '../filters/filterColours';\n\nconst getKeys = (data: BarItem[]) => {\n  const keys = data.flatMap((d) => Object.keys(d));\n  return Array.from(new Set(keys)).filter((k) => k !== 'characterName');\n};\n\nconst getColour = (bar: any) => {\n  const { id } = bar;\n  return filterColourMap[id];\n};\n\nconst BarChart = React.memo(({ data }: { data: BarItem[] }) => {\n  const keys = getKeys(data);\n  return (\n    <ResponsiveBar\n      data={data}\n      indexBy={'characterName'}\n      keys={keys}\n      margin={{ top: 10, right: 10, bottom: 80, left: 30 }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        format: (e) => {\n          if (typeof e === 'number') {\n            return Math.floor(e) === e ? e : '';\n          }\n          return '';\n        },\n      }}\n      axisBottom={{\n        tickRotation: -45,\n        tickPadding: 10,\n      }}\n      valueScale={{ type: 'linear' }}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor=\"white\"\n      colors={getColour}\n    />\n  );\n});\n\nexport default BarChart;\n","import React from 'react';\nimport { Metadata, SelectedCharacterBonus } from '../../types';\nimport { BonusesCount } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const currentCount = acc.get(val.characterId);\n      acc.set(val.characterId, currentCount ? currentCount + 1 : 1);\n      return acc;\n    }, new Map<string, number>()),\n    ([key, value]) => {\n      const characterName =\n        metadata?.characters.find((c) => c.id === key)?.name || key;\n      return {\n        characterName,\n        count: value,\n      };\n    }\n  ).sort((a, b) => b.count - a.count);\n\n  return rankData;\n};\n\nconst useRankTableData = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  const [rankData, setRankData] = React.useState<BonusesCount[]>([]);\n\n  React.useEffect(() => {\n    setRankData(prepare(data, metadata));\n  }, [data, metadata]);\n  return rankData;\n};\n\nexport default useRankTableData;\n","import { SelectedCharacterBonus } from '../../types';\nimport { AreaBumpInputSerie } from '@nivo/bump';\nimport useRankTableData from './useRankTableData';\nimport React from 'react';\n\nconst prepare = (data: SelectedCharacterBonus[]): AreaBumpInputSerie[] => {\n  const uniqueDates = Array.from(new Set(data.map((d) => d.date)));\n  const areaBumpData = Array.from(\n    data.reduce((acc, val) => {\n      const usageData = acc.get(val.characterId);\n\n      if (usageData === undefined) {\n        acc.set(val.characterId, [\n          ...uniqueDates.map((d) => ({\n            x: d,\n            y: d === val.date ? 1 : 0,\n          })),\n        ]);\n      } else {\n        const dataPoint = usageData.find((d) => d.x === val.date);\n        if (dataPoint === undefined) {\n          acc.set(val.characterId, [\n            ...usageData.filter((d) => d.x !== val.date),\n            { x: val.date, y: 1 },\n          ]);\n        } else {\n          const updatedDataPoint = {\n            ...dataPoint,\n            y: dataPoint.y + 1,\n          };\n          acc.set(\n            val.characterId,\n            usageData.map((d) => (d.x === val.date ? updatedDataPoint : d))\n          );\n        }\n      }\n\n      return acc;\n    }, new Map<string, { x: string; y: number }[]>()),\n    ([key, value]) => ({ id: key, data: value })\n  );\n\n  return areaBumpData;\n};\n\nconst useAreaBumpData = (\n  data: SelectedCharacterBonus[]\n): AreaBumpInputSerie[] => {\n  const [areaBumpData, setAreaBumpData] = React.useState<AreaBumpInputSerie[]>(\n    []\n  );\n  const rankData = useRankTableData(data);\n\n  React.useEffect(() => {\n    const top10 = rankData.slice(0, 10);\n    const areaData = prepare(data);\n    setAreaBumpData(\n      areaData.filter((d) => top10.find((t) => t.characterName === d.id))\n    );\n  }, [data, rankData]);\n  return areaBumpData;\n};\n\nexport default useAreaBumpData;\n","import React from 'react';\nimport { Metadata, SelectedCharacterBonus, Stage } from '../../types';\nimport { BarItem } from '../types';\n\nconst getKeys = (data: Stage[]) => {\n  const keys = data.flatMap((d) => d.story);\n  return Array.from(new Set(keys));\n};\n\ninterface BarCountItem {\n  [key: string]: number;\n}\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): BarItem[] => {\n  const keys = getKeys(metadata.stages);\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const story =\n        metadata.stages.find((s) => s.id === val.stageId)?.story ||\n        `Stage ${val.stageId}`;\n\n      const characterName =\n        metadata.characters.find((c) => c.id === val.characterId)?.name ||\n        val.characterId;\n\n      const currentCharacterItem = acc.get(characterName);\n      if (currentCharacterItem === undefined) {\n        const barCountItem = keys.reduce((acc, current) => {\n          return {\n            ...acc,\n            [current]: current === story ? 1 : 0,\n          };\n        }, {});\n        //acc.set(characterName, { [story]: 1 });\n        acc.set(characterName, barCountItem);\n      } else {\n        const storyCharacterCount = currentCharacterItem[story] || 0;\n\n        acc.set(characterName, {\n          ...currentCharacterItem,\n          [story]: storyCharacterCount + 1,\n        });\n      }\n\n      return acc;\n    }, new Map<string, BarCountItem>()),\n    ([key, value]) => ({ characterName: key, ...value })\n  );\n\n  return rankData;\n};\n\nconst useBarChartData = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): BarItem[] => {\n  const [barData, setBarData] = React.useState<BarItem[]>([]);\n\n  React.useEffect(() => {\n    if (data !== undefined) {\n      const preparedData = prepare(data, metadata);\n      setBarData(preparedData);\n    }\n  }, [data, metadata]);\n\n  return barData;\n};\n\nexport default useBarChartData;\n","import { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport AreaBumpChart from './AreaBumpChart';\nimport BarChart from './BarChart';\nimport useAreaBumpData from './hooks/useAreaBumpData';\nimport useBarChartData from './hooks/useBarChartData';\n\nconst useStyles = makeStyles({\n  graphContainer: {\n    height: '75vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  graphSkeleteon: {\n    transform: 'scale(1,1)',\n    height: '90%',\n    width: '95%',\n  },\n});\n\nconst GraphCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state: metadataContext } = React.useContext(MetadataContext);\n  const { state: filterContext } = React.useContext(FilterContext);\n  const areaBumpData = useAreaBumpData(data);\n  const barData = useBarChartData(data, metadataContext);\n  const classes = useStyles();\n\n  const showTreemap =\n    filterContext.filters.filter((f) => f.id === 'currentMonth' && f.enabled)\n      .length >= 1;\n\n  return (\n    <Paper className={classes.graphContainer}>\n      {isLoading && <Skeleton className={classes.graphSkeleteon} />}\n      {!isLoading && !showTreemap && (\n        <AreaBumpChart areaBumpData={areaBumpData} />\n      )}\n      {!isLoading && showTreemap && <BarChart data={barData} />}\n    </Paper>\n  );\n};\n\nexport default GraphCard;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { BonusesCount } from './types';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n  },\n  tableContainer: {\n    height: '65vh',\n    width: '100%',\n  },\n});\n\nconst RankTable = ({ rankedData }: { rankedData: BonusesCount[] }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Character</TableCell>\n            <TableCell align=\"right\"># of stages</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rankedData.map((row) => (\n            <TableRow key={row.characterName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.characterName}\n              </TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default RankTable;\n","import { Card, CardContent, CardHeader } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport useRankTableData from './hooks/useRankTableData';\nimport RankTable from './RankTable';\n\nconst useStyles = makeStyles({\n  card: {\n    //height: '65vh',\n  },\n  cardContent: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  left: {\n    float: 'left',\n  },\n  right: {\n    float: 'right',\n    marginRight: '1em',\n  },\n  contentContainer: {\n    paddingLeft: '1em',\n  },\n});\n\nconst RankTableCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state } = React.useContext(MetadataContext);\n  const rankedData = useRankTableData(data, state);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardHeader\n          title={\n            isLoading ? (\n              <Skeleton\n                animation=\"wave\"\n                height={30}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            ) : (\n              'Story Mode Rank'\n            )\n          }\n        />\n        <CardContent className={classes.cardContent}>\n          {isLoading && (\n            <div className={classes.contentContainer}>\n              {[...Array(20)].map((_val, index) => (\n                <React.Fragment key={index}>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    style={{ marginBottom: 6 }}\n                    width=\"50%\"\n                    className={classes.left}\n                  ></Skeleton>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    width=\"10%\"\n                    className={classes.right}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n            </div>\n          )}\n          {!isLoading && <RankTable rankedData={rankedData} />}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default RankTableCard;\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport FilterSection from '../../components/FilterSection';\nimport GraphCard from '../../components/GraphCard';\nimport useFilteredData from '../../components/hooks/useFilteredData';\nimport RankTableCard from '../../components/RankTableCard';\nimport { FilterContext } from '../../context/filterContext';\nimport { SelectedCharacterBonus } from '../../types';\n\nconst StatsPage = ({\n  data,\n  isLoading,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading: boolean;\n}) => {\n  //Contexts\n  const { state: filterContext } = React.useContext(FilterContext);\n\n  const filteredData = useFilteredData(data, filterContext.filters);\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item lg={12}>\n          <FilterSection />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <RankTableCard data={filteredData} isLoading={isLoading} />\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <GraphCard data={filteredData} isLoading={isLoading} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default StatsPage;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport useCharacterBonus from '../components/hooks/useCharacterBonus';\nimport useCharactersMetadata from '../components/hooks/useCharactersMetadata';\nimport useFragmentMetadata from '../components/hooks/useFragmentsMetadata';\nimport useStagesMetadata from '../components/hooks/useStagesMetadata';\nimport SiteAppBar from '../components/SiteAppBar';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\nimport filters, { createFragmentFilters } from '../filters';\nimport AutoplayPage from './autoplay/AutoplayPage';\nimport ManagePage from './manage/ManagePage';\nimport StatsPage from './stats/StatsPage';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: '1em',\n    },\n  })\n);\n\nconst HomePage = () => {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(MetadataContext);\n  const { dispatch: filterDispatch } = React.useContext(FilterContext);\n\n  //Fetch data\n  const { data: stageMetadata, isLoading: isStageMetadataLoading } =\n    useStagesMetadata();\n  const { data: characterMetadata, isLoading: isCharacterMetadataLoading } =\n    useCharactersMetadata();\n  const { data: fragmentMetadata, isLoading: isFragmentMetadataLoading } =\n    useFragmentMetadata();\n  const { data, isLoading: isDataLoading } = useCharacterBonus();\n\n  React.useEffect(() => {\n    dispatch({ type: 'calculateLastMonth', data });\n  }, [dispatch, data]);\n\n  React.useEffect(() => {\n    if (!isStageMetadataLoading) {\n      dispatch({ type: 'setStages', stages: stageMetadata });\n    }\n\n    if (!isCharacterMetadataLoading) {\n      dispatch({ type: 'setCharacters', characters: characterMetadata });\n    }\n\n    if (!isFragmentMetadataLoading && fragmentMetadata) {\n      dispatch({ type: 'setFragments', fragments: fragmentMetadata });\n    }\n  }, [\n    dispatch,\n    characterMetadata,\n    isCharacterMetadataLoading,\n    isStageMetadataLoading,\n    isFragmentMetadataLoading,\n    stageMetadata,\n    fragmentMetadata,\n  ]);\n\n  React.useEffect(() => {\n    const fragmentFilters = createFragmentFilters(fragmentMetadata || []);\n\n    filterDispatch({\n      type: 'add',\n      filters: [...filters, ...fragmentFilters],\n    });\n  }, [filterDispatch, fragmentMetadata]);\n\n  const isLoading =\n    isStageMetadataLoading &&\n    isCharacterMetadataLoading &&\n    isFragmentMetadataLoading &&\n    isDataLoading;\n\n  return (\n    <>\n      <SiteAppBar />\n      <div className={classes.root}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<StatsPage data={data} isLoading={isLoading} />}\n          />\n          <Route\n            path=\"/autoplay\"\n            element={<AutoplayPage data={data} isLoading={isLoading} />}\n          />\n          <Route path=\"/manage\" element={<ManagePage />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { SelectedCharacterBonus, StoryFragment } from '../types';\nimport filterColourMap from './filterColours';\nimport { Filter } from './types';\n\nconst createFragmentFilters = (fragments: StoryFragment[]): Filter[] => {\n  return fragments\n    .sort((a, b) => a.id - b.id)\n    .map((f) => {\n      const colour = filterColourMap[f.story];\n      return {\n        id: `fragmentFilter${f.id}`,\n        label: `${f.story} #${f.fragment}`,\n        enabled: false,\n        canDelete: true,\n        predicate: (term: SelectedCharacterBonus, data?: any) => {\n          return f.stageIds.includes(term.stageId);\n        },\n        colour,\n      };\n    });\n};\n\nexport { createFragmentFilters };\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/deepPurple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport HomePage from './pages/HomePage';\nimport FilterProvider from './context/filterContext';\nimport MetadataProvider from './context/metadataContext';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport { HashRouter } from 'react-router-dom';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <>\n      <HashRouter>\n        <QueryClientProvider client={queryClient}>\n          <MetadataProvider>\n            <FilterProvider>\n              <ThemeProvider theme={theme}>\n                <HomePage />\n              </ThemeProvider>\n            </FilterProvider>\n          </MetadataProvider>\n        </QueryClientProvider>\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}