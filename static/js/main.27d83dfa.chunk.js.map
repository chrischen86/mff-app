{"version":3,"sources":["context/createCtx.tsx","context/filterContext.tsx","context/metadataContext.tsx","filters/timeFilters.tsx","filters/storyFilters.tsx","filters/index.tsx","components/FilterSection.tsx","components/AreaBumpChart.tsx","components/hooks/useRankTableData.tsx","components/hooks/useAreaBumpData.tsx","components/hooks/useTreeMapData.tsx","components/TreemapChart.tsx","components/GraphCard.tsx","components/hooks/useCharacterBonus.tsx","components/hooks/useCharactersMetadata.tsx","components/hooks/useFilteredData.tsx","components/hooks/useStagesMetadata.tsx","components/RankTable.tsx","components/RankTableCard.tsx","components/SiteAppBar.tsx","components/HomePage.tsx","theme.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createCtx","reducer","initialState","ctx","React","createContext","state","dispatch","props","useReducer","Provider","value","action","type","filters","undefined","find","f","id","filterId","map","enabled","filter","s","Error","FilterProvider","FilterContext","stages","characters","data","distinctDates","d","i","arr","findIndex","t","date","Date","sort","a","b","getTime","currentMonth","length","toISOString","stories","MetadataProvider","MetadataContext","timeFilters","label","canDelete","predicate","term","metadata","theDate","current","getMonth","storyFilters","stageId","allFilters","useStyles","makeStyles","theme","toolbar","backgroundColor","display","flexWrap","padding","spacing","transition","transitions","create","easing","easeInOut","duration","short","position","toolbarHidden","paddingLeft","minHeight","easeIn","chip","margin","chipHidden","FilterSection","visible","useState","isVisible","setIsVisible","useContext","classes","useEffect","Toolbar","className","clsx","IconButton","onClick","Chip","onDelete","chipId","forEach","handleClick","color","size","AreaBumpChart","areaBumpData","top","right","bottom","left","colors","scheme","blendMode","startLabel","axisTop","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","format","moment","axisBottom","useRankTableData","Array","from","reduce","acc","val","currentCount","get","characterId","set","Map","key","characterName","c","name","count","prepare","useAreaBumpData","rankData","top10","slice","uniqueDates","Set","usageData","x","y","dataPoint","updatedDataPoint","useTreeMapData","story","currentStory","loc","storyCharacterItem","children","TreemapChart","memo","identity","labelSkipSize","labelTextColor","graphContainer","height","width","justifyContent","alignItems","graphSkeleteon","transform","GraphCard","isLoading","metadataContext","filterContext","treeMapData","showTreemap","Paper","Skeleton","useCharacterBonus","useQuery","fetch","res","json","useCharactersMetadata","filterGroups","useFilteredData","enabledFilters","every","fg","ef","some","filterData","useStagesMetadata","table","minWidth","tableContainer","RankTable","rankedData","TableContainer","component","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","card","cardContent","paddingBottom","float","marginRight","contentContainer","RankTableCard","Card","CardHeader","title","animation","style","marginBottom","CardContent","_val","index","Fragment","root","flexGrow","menuButton","SiteAppBar","AppBar","Typography","variant","target","href","createStyles","HomePage","stageMetadata","isStageMetadataLoading","characterMetadata","isCharacterMetadataLoading","isDataLoading","filteredData","Grid","container","item","lg","xs","md","createMuiTheme","palette","primary","main","purple","secondary","green","queryClient","QueryClient","App","QueryClientProvider","client","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27d83dfa.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function createCtx<StateType, ActionType>(\n  reducer: React.Reducer<StateType, ActionType>,\n  initialState: StateType\n) {\n  const defaultDispatch: React.Dispatch<ActionType> = () => initialState; // we never actually use this\n  const ctx = React.createContext({\n    state: initialState,\n    dispatch: defaultDispatch, // just to mock out the dispatch type and make it not optioanl\n  });\n\n  function Provider(props: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer<\n      React.Reducer<StateType, ActionType>\n    >(reducer, initialState);\n    return <ctx.Provider value={{ state, dispatch }} {...props} />;\n  }\n  return [ctx, Provider] as const;\n}\n","import createCtx from './createCtx';\nimport { Filter } from '../filters/types';\n\nconst initialState: { filters: Filter[] } = {\n  filters: [],\n};\ntype FilterState = typeof initialState;\ntype Action =\n  | { type: 'add'; filters: Filter[] }\n  | { type: 'remove'; filters: Filter[] }\n  | { type: 'enable'; filterId: string }\n  | { type: 'disable'; filterId: string };\n\nconst reducer = (state: FilterState, action: Action): FilterState => {\n  switch (action.type) {\n    case 'add':\n      return {\n        ...state,\n        filters: action.filters,\n      };\n    case 'enable':\n    case 'disable': {\n      const filter = state.filters.find((f) => f.id === action.filterId);\n      if (filter === undefined) {\n        return state;\n      }\n\n      return {\n        ...state,\n        filters: state.filters.map((f) => {\n          return f.id === action.filterId\n            ? {\n                ...f,\n                enabled: action.type === 'disable' ? false : true,\n              }\n            : f;\n        }),\n      };\n    }\n    case 'remove':\n      return {\n        ...state,\n        filters: [\n          ...state.filters.filter((f) =>\n            action.filters.find((s) => s.id === f.id)\n          ),\n        ],\n      };\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, FilterProvider] = createCtx(reducer, initialState);\nexport const FilterContext = ctx;\n\nexport default FilterProvider;\n","import { Character, Stage, SelectedCharacterBonus, Metadata } from '../types';\nimport createCtx from './createCtx';\n\nconst initialState: Metadata = {\n  stages: [],\n  characters: [],\n  stories: [],\n  currentMonth: undefined,\n};\n\ntype MetadataState = typeof initialState;\ntype Action =\n  | { type: 'setStages'; stages: Stage[] }\n  | { type: 'setCharacters'; characters: Character[] }\n  | { type: 'calculateLastMonth'; data: SelectedCharacterBonus[] };\n\nconst reducer = (state: MetadataState, action: Action): MetadataState => {\n  switch (action.type) {\n    case 'setStages':\n      return {\n        ...state,\n        stages: action.stages,\n      };\n    case 'setCharacters':\n      return {\n        ...state,\n        characters: action.characters,\n      };\n    case 'calculateLastMonth': {\n      if (action.data === undefined) {\n        return state;\n      }\n      const distinctDates = action.data\n        .filter((d, i, arr) => arr.findIndex((t) => t.date === d.date) === i)\n        .map((d) => new Date(d.date))\n        .sort((a, b) => {\n          return a.getTime() - b.getTime();\n        });\n\n      return {\n        ...state,\n        currentMonth: distinctDates[distinctDates.length - 1].toISOString(),\n      };\n    }\n\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, MetadataProvider] = createCtx(reducer, initialState);\nexport const MetadataContext = ctx;\n\nexport default MetadataProvider;\n","import { Metadata, SelectedCharacterBonus } from '../types';\nimport { Filter } from './types';\n\nconst currentMonthFilter: Filter = {\n  id: 'currentMonth',\n  label: 'Current Month',\n  enabled: true,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus, metadata: Metadata) => {\n    const theDate = new Date(term.date);\n    const current =\n      metadata.currentMonth === undefined\n        ? new Date()\n        : new Date(metadata.currentMonth);\n\n    return theDate.getMonth() === current.getMonth();\n  },\n};\nexport { currentMonthFilter };\n\nconst allTimeFilter: Filter = {\n  id: 'allTime',\n  label: 'All Time',\n  enabled: false,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus) => {\n    return true;\n  },\n};\nexport { allTimeFilter };\nconst timeFilters = [currentMonthFilter, allTimeFilter];\nexport default timeFilters;\n","import { SelectedCharacterBonus } from '../types';\nimport { Filter } from './types';\n\nconst dimensionalClashdFilter: Filter = {\n  id: 'dimensionalClash',\n  label: 'Dimensional Clash',\n  enabled: false,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId <= 20;\n  },\n};\nexport { dimensionalClashdFilter };\n\nconst trueShieldFilter: Filter = {\n  id: 'trueShield',\n  label: 'The True SHIELD',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 21 && term.stageId <= 24;\n  },\n};\nexport { trueShieldFilter };\n\nconst allWarFilter: Filter = {\n  id: 'allWar',\n  label: 'The All-War',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 25 && term.stageId <= 28;\n  },\n};\nexport { allWarFilter };\n\nconst futureEndsHereFilter: Filter = {\n  id: 'futureEndsHere',\n  label: 'The Future Ends Here',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 29;\n  },\n};\nexport { futureEndsHereFilter };\n\nconst storyFilters = [\n  dimensionalClashdFilter,\n  trueShieldFilter,\n  allWarFilter,\n  futureEndsHereFilter,\n];\nexport default storyFilters;\n","import timeFilters from './timeFilters';\nimport storyFilters from './storyFilters';\n\nconst allFilters = [...timeFilters, ...storyFilters];\nexport default allFilters;\n","import { Toolbar, IconButton, Chip } from '@material-ui/core';\nimport React from 'react';\nimport { Filter } from '../filters/types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport FilterIcon from '@material-ui/icons/FilterList';\nimport { FilterContext } from '../context/filterContext';\nimport timeFilters from '../filters/timeFilters';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    backgroundColor: '#f5f5f5',\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n    position: 'sticky',\n  },\n  toolbarHidden: {\n    backgroundColor: 'inherit',\n    padding: 0,\n    paddingLeft: theme.spacing(0.5),\n    minHeight: 0,\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  chipHidden: {\n    display: 'none',\n  },\n}));\n\nconst FilterSection = ({\n  visible = false,\n  filters = [],\n}: {\n  visible?: boolean;\n  filters?: Filter[];\n}) => {\n  const [isVisible, setIsVisible] = React.useState(visible);\n  const { state, dispatch } = React.useContext(FilterContext);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    dispatch({ type: 'add', filters });\n  }, [dispatch, filters]);\n\n  const handleDelete = (chipId: string) => {\n    dispatch({\n      type: 'disable',\n      filterId: chipId,\n    });\n  };\n\n  const handleClick = (filter: Filter) => {\n    if (timeFilters.find((f) => f.id === filter.id)) {\n      const others = timeFilters.filter((f) => f.id !== filter.id);\n      others.forEach((f) => {\n        dispatch({\n          type: filter.enabled ? 'enable' : 'disable',\n          filterId: f.id,\n        });\n      });\n    }\n    dispatch({\n      type: filter.enabled ? 'disable' : 'enable',\n      filterId: filter.id,\n    });\n  };\n\n  if (!isVisible && state.filters.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.toolbar, !isVisible && classes.toolbarHidden)}\n    >\n      <IconButton onClick={() => setIsVisible(!isVisible)}>\n        <FilterIcon />\n      </IconButton>\n      {state.filters?.map((filter) => {\n        return (\n          <Chip\n            key={filter.id}\n            label={filter.label}\n            className={clsx(\n              classes.chip,\n              !isVisible && !filter.enabled && classes.chipHidden\n            )}\n            onDelete={\n              !isVisible && filter.canDelete\n                ? () => handleDelete(filter.id)\n                : undefined\n            }\n            onClick={isVisible ? () => handleClick(filter) : undefined}\n            color={filter.enabled ? 'primary' : undefined}\n            size={isVisible ? 'medium' : 'small'}\n          />\n        );\n      })}\n    </Toolbar>\n  );\n};\n\nexport default FilterSection;\n","import React from 'react';\nimport { AreaBumpInputSerie, ResponsiveAreaBump } from '@nivo/bump';\nimport moment from 'moment';\n\nconst AreaBumpChart = ({\n  areaBumpData,\n}: {\n  areaBumpData: AreaBumpInputSerie[];\n}) => {\n  return (\n    <ResponsiveAreaBump\n      data={areaBumpData}\n      margin={{ top: 40, right: 100, bottom: 40, left: 100 }}\n      spacing={8}\n      colors={{ scheme: 'nivo' }}\n      blendMode=\"multiply\"\n      startLabel=\"id\"\n      axisTop={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: 'Top 10 Ranking Over Time',\n        legendPosition: 'middle',\n        legendOffset: -28,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n    />\n  );\n};\n\nexport default AreaBumpChart;\n","import { Metadata, SelectedCharacterBonus } from '../../types';\nimport { BonusesCount } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const currentCount = acc.get(val.characterId);\n      acc.set(val.characterId, currentCount ? currentCount + 1 : 1);\n      return acc;\n    }, new Map<string, number>()),\n    ([key, value]) => {\n      const characterName =\n        metadata?.characters.find((c) => c.id === key)?.name || key;\n      return {\n        characterName,\n        count: value,\n      };\n    }\n  ).sort((a, b) => b.count - a.count);\n\n  return rankData;\n};\n\nconst useRankTableData = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  if (data === undefined) {\n    return [];\n  }\n\n  const rankData = prepare(data, metadata);\n  return rankData;\n};\n\nexport default useRankTableData;\n","import { SelectedCharacterBonus } from '../../types';\nimport { AreaBumpInputSerie } from '@nivo/bump';\nimport useRankTableData from './useRankTableData';\n\nconst prepare = (data: SelectedCharacterBonus[]): AreaBumpInputSerie[] => {\n  const uniqueDates = Array.from(new Set(data.map((d) => d.date)));\n  const areaBumpData = Array.from(\n    data.reduce((acc, val) => {\n      const usageData = acc.get(val.characterId);\n\n      if (usageData === undefined) {\n        acc.set(val.characterId, [\n          ...uniqueDates.map((d) => ({\n            x: d,\n            y: d === val.date ? 1 : 0,\n          })),\n        ]);\n      } else {\n        const dataPoint = usageData.find((d) => d.x === val.date);\n        if (dataPoint === undefined) {\n          acc.set(val.characterId, [\n            ...usageData.filter((d) => d.x !== val.date),\n            { x: val.date, y: 1 },\n          ]);\n        } else {\n          const updatedDataPoint = {\n            ...dataPoint,\n            y: dataPoint.y + 1,\n          };\n          acc.set(\n            val.characterId,\n            usageData.map((d) => (d.x === val.date ? updatedDataPoint : d))\n          );\n        }\n      }\n\n      return acc;\n    }, new Map<string, { x: string; y: number }[]>()),\n    ([key, value]) => ({ id: key, data: value })\n  );\n\n  return areaBumpData;\n};\n\nconst useAreaBumpData = (\n  data: SelectedCharacterBonus[]\n): AreaBumpInputSerie[] => {\n  const rankData = useRankTableData(data);\n\n  if (data === undefined) {\n    return [];\n  }\n\n  const top10 = rankData.slice(0, 10);\n  const areaBumpData = prepare(data);\n  return areaBumpData.filter((d) =>\n    top10.find((t) => t.characterName === d.id)\n  );\n};\n\nexport default useAreaBumpData;\n","import { Metadata, SelectedCharacterBonus } from '../../types';\nimport { TreemapItem } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): TreemapItem => {\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const story =\n        metadata.stages.find((s) => s.id === val.stageId)?.story ||\n        `Stage ${val.stageId}`;\n      const currentStory = acc.get(story);\n      const characterName =\n        metadata.characters.find((c) => c.id === val.characterId)?.name ||\n        val.characterId;\n      if (currentStory === undefined) {\n        acc.set(story, [{ name: characterName, loc: 1 }]);\n      } else {\n        const storyCharacterItem = currentStory.find(\n          (c) => c.name === characterName\n        ) ?? {\n          name: characterName,\n          loc: 0,\n        };\n\n        acc.set(story, [\n          { ...storyCharacterItem, loc: (storyCharacterItem.loc ?? 0) + 1 },\n          ...currentStory.filter((c) => c.name !== characterName),\n        ]);\n      }\n\n      return acc;\n    }, new Map<string, TreemapItem[]>()),\n    ([key, value]) => ({ name: key, children: value })\n  );\n  const theData: TreemapItem = {\n    name: 'Character Bonus By Story',\n    children: [...rankData],\n  };\n\n  return theData;\n};\n\nconst useTreeMapData = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): TreemapItem => {\n  if (data === undefined) {\n    return { name: 'No Data' };\n  }\n\n  const rankData = prepare(data, metadata);\n  return rankData;\n};\n\nexport default useTreeMapData;\n","import React from 'react';\nimport { ResponsiveTreeMap } from '@nivo/treemap';\nimport { TreemapItem } from './types';\n\nconst TreemapChart = React.memo(({ data }: { data: TreemapItem }) => {\n  return (\n    <ResponsiveTreeMap\n      data={data}\n      identity=\"name\"\n      value=\"loc\"\n      margin={{ top: 10, right: 10, bottom: 10, left: 10 }}\n      label=\"id\"\n      labelSkipSize={50}\n      labelTextColor=\"black\"\n    />\n  );\n});\n\nexport default TreemapChart;\n","import { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport AreaBumpChart from './AreaBumpChart';\nimport useAreaBumpData from './hooks/useAreaBumpData';\nimport useTreeMapData from './hooks/useTreeMapData';\nimport TreemapChart from './TreemapChart';\n\nconst useStyles = makeStyles({\n  graphContainer: {\n    height: '65vh',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  graphSkeleteon: {\n    transform: 'scale(1,1)',\n    height: '90%',\n    width: '95%',\n  },\n});\n\nconst GraphCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state: metadataContext } = React.useContext(MetadataContext);\n  const { state: filterContext } = React.useContext(FilterContext);\n  const areaBumpData = useAreaBumpData(data);\n  const treeMapData = useTreeMapData(data, metadataContext);\n  const classes = useStyles();\n\n  const showTreemap =\n    filterContext.filters.filter((f) => f.id === 'currentMonth' && f.enabled)\n      .length >= 1;\n\n  return (\n    <Paper className={classes.graphContainer}>\n      {isLoading && <Skeleton className={classes.graphSkeleteon} />}\n      {!isLoading && !showTreemap && (\n        <AreaBumpChart areaBumpData={areaBumpData} />\n      )}\n      {!isLoading && showTreemap && <TreemapChart data={treeMapData} />}\n    </Paper>\n  );\n};\n\nexport default GraphCard;\n","import { useQuery } from 'react-query';\n\nconst useCharacterBonus = () => {\n  return useQuery('characterBonus', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/selectedcharacterbonus.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharacterBonus;\n","import { useQuery } from 'react-query';\n\nconst useCharactersMetadata = () => {\n  return useQuery('characters', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/characters.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharactersMetadata;\n","import storyFilters from '../../filters/storyFilters';\nimport timeFilters from '../../filters/timeFilters';\nimport { Filter } from '../../filters/types';\nimport { Metadata, SelectedCharacterBonus } from '../../types';\nimport React from 'react';\nimport { MetadataContext } from '../../context/metadataContext';\n\nconst filterGroups = [timeFilters, storyFilters];\n\nconst filterData = (\n  data: SelectedCharacterBonus[],\n  filters: Filter[],\n  metadata: Metadata\n): SelectedCharacterBonus[] => {\n  const enabledFilters = filters.filter((f) => f.enabled);\n  const filteredData = data.filter((d) =>\n    filterGroups.every((fg) =>\n      fg\n        .filter((f) => enabledFilters?.find((ef) => ef.id === f.id))\n        .some((f) => f.predicate(d, metadata))\n    )\n  );\n\n  return filteredData;\n};\n\nconst useFilteredData = (\n  data?: SelectedCharacterBonus[],\n  filters?: Filter[]\n): SelectedCharacterBonus[] => {\n  const { state: metadata } = React.useContext(MetadataContext);\n\n  if (data === undefined) {\n    return [];\n  }\n\n  if (filters === undefined || filters.length <= 0) {\n    return data;\n  }\n\n  const filteredData = filterData(data, filters, metadata);\n  return filteredData;\n};\n\nexport default useFilteredData;\n","import { useQuery } from 'react-query';\n\nconst useStagesMetadata = () => {\n  return useQuery('stages', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/stages.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useStagesMetadata;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { BonusesCount } from './types';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n  },\n  tableContainer: {\n    height: '65vh',\n    width: '100%',\n  },\n});\n\nconst RankTable = ({ rankedData }: { rankedData: BonusesCount[] }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Character</TableCell>\n            <TableCell align=\"right\"># of stages</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rankedData.map((row) => (\n            <TableRow key={row.characterName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.characterName}\n              </TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default RankTable;\n","import { Card, CardContent, CardHeader } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport useRankTableData from './hooks/useRankTableData';\nimport RankTable from './RankTable';\n\nconst useStyles = makeStyles({\n  card: {\n    height: '65vh',\n  },\n  cardContent: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  left: {\n    float: 'left',\n  },\n  right: {\n    float: 'right',\n    marginRight: '1em',\n  },\n  contentContainer: {\n    paddingLeft: '1em',\n  },\n});\n\nconst RankTableCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state } = React.useContext(MetadataContext);\n  const rankedData = useRankTableData(data, state);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardHeader\n          title={\n            isLoading ? (\n              <Skeleton\n                animation=\"wave\"\n                height={30}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            ) : (\n              'Story Mode Rank'\n            )\n          }\n        />\n        <CardContent className={classes.cardContent}>\n          {isLoading && (\n            <div className={classes.contentContainer}>\n              {[...Array(20)].map((_val, index) => (\n                <React.Fragment key={index}>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    style={{ marginBottom: 6 }}\n                    width=\"50%\"\n                    className={classes.left}\n                  ></Skeleton>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    width=\"10%\"\n                    className={classes.right}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n            </div>\n          )}\n          {!isLoading && <RankTable rankedData={rankedData} />}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default RankTableCard;\n","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst SiteAppBar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}></Typography>\n        <IconButton\n          color=\"inherit\"\n          target=\"_blank\"\n          href={'https://github.com/chrischen86/mff-app'}\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SiteAppBar;\n","import { Grid } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\n//import data from './__mocks__/data.json';\nimport filters from '../filters';\nimport FilterSection from './FilterSection';\nimport GraphCard from './GraphCard';\nimport useCharacterBonus from './hooks/useCharacterBonus';\nimport useCharactersMetadata from './hooks/useCharactersMetadata';\nimport useFilteredData from './hooks/useFilteredData';\nimport useStagesMetadata from './hooks/useStagesMetadata';\nimport RankTableCard from './RankTableCard';\nimport SiteAppBar from './SiteAppBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: '1em',\n    },\n  })\n);\n\nconst HomePage = () => {\n  //Contexts\n  const { dispatch } = React.useContext(MetadataContext);\n  const { state: filterContext } = React.useContext(FilterContext);\n\n  //Fetch data\n  const {\n    data: stageMetadata,\n    isLoading: isStageMetadataLoading,\n  } = useStagesMetadata();\n  const {\n    data: characterMetadata,\n    isLoading: isCharacterMetadataLoading,\n  } = useCharactersMetadata();\n  const { data, isLoading: isDataLoading } = useCharacterBonus();\n\n  const filteredData = useFilteredData(data, filterContext.filters);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    dispatch({ type: 'calculateLastMonth', data });\n  }, [dispatch, data]);\n\n  React.useEffect(() => {\n    if (!isStageMetadataLoading) {\n      dispatch({ type: 'setStages', stages: stageMetadata });\n    }\n\n    if (!isCharacterMetadataLoading) {\n      dispatch({ type: 'setCharacters', characters: characterMetadata });\n    }\n  }, [\n    dispatch,\n    characterMetadata,\n    isCharacterMetadataLoading,\n    isStageMetadataLoading,\n    stageMetadata,\n  ]);\n\n  const isLoading =\n    isStageMetadataLoading && isCharacterMetadataLoading && isDataLoading;\n\n  return (\n    <>\n      <SiteAppBar />\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item lg={12}>\n            <FilterSection filters={filters} />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <RankTableCard data={filteredData} isLoading={isLoading} />\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <GraphCard data={filteredData} isLoading={isLoading} />\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/deepPurple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport HomePage from './components/HomePage';\nimport FilterProvider from './context/filterContext';\nimport MetadataProvider from './context/metadataContext';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <>\n      <QueryClientProvider client={queryClient}>\n        <MetadataProvider>\n          <FilterProvider>\n            <ThemeProvider theme={theme}>\n              <HomePage />\n            </ThemeProvider>\n          </FilterProvider>\n        </MetadataProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}