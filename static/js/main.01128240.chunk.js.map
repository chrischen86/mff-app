{"version":3,"sources":["context/createCtx.tsx","context/filterContext.tsx","context/metadataContext.tsx","filters/timeFilters.tsx","filters/storyFilters.tsx","filters/index.tsx","components/FilterSection.tsx","components/AreaBumpChart.tsx","components/hooks/useAreaBumpData.tsx","components/hooks/useTreeMapData.tsx","components/TreemapChart.tsx","components/GraphCard.tsx","components/hooks/useCharacterBonus.tsx","components/hooks/useCharactersMetadata.tsx","components/hooks/useFilteredData.tsx","components/hooks/useStagesMetadata.tsx","components/hooks/useRankTableData.tsx","components/RankTable.tsx","components/RankTableCard.tsx","components/SiteAppBar.tsx","components/HomePage.tsx","theme.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createCtx","reducer","initialState","ctx","React","createContext","state","dispatch","props","useReducer","Provider","value","action","type","filters","undefined","find","f","id","filterId","map","enabled","filter","s","Error","FilterProvider","FilterContext","stages","characters","distinctDates","data","d","i","arr","findIndex","t","date","Date","sort","console","log","stories","currentMonth","MetadataProvider","MetadataContext","timeFilters","label","canDelete","predicate","term","theDate","today","getMonth","storyFilters","stageId","allFilters","useStyles","makeStyles","theme","toolbar","backgroundColor","display","flexWrap","padding","spacing","transition","transitions","create","easing","easeInOut","duration","short","position","toolbarHidden","paddingLeft","minHeight","easeIn","chip","margin","chipHidden","FilterSection","visible","useState","isVisible","setIsVisible","useContext","classes","useEffect","length","Toolbar","className","clsx","IconButton","onClick","Chip","onDelete","chipId","forEach","handleClick","color","size","AreaBumpChart","areaBumpData","top","right","bottom","left","colors","scheme","blendMode","startLabel","axisTop","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","format","moment","axisBottom","useAreaBumpData","Array","from","reduce","acc","val","usageData","get","characterId","set","x","y","dataPoint","Map","prepare","useTreeMapData","metadata","name","rankData","story","currentStory","characterName","c","loc","storyCharacterItem","children","TreemapChart","memo","identity","labelSkipSize","labelTextColor","graphContainer","height","width","justifyContent","alignItems","graphSkeleteon","transform","GraphCard","isLoading","metadataContext","filterContext","treeMapData","showTreemap","Paper","Skeleton","useCharacterBonus","useQuery","a","fetch","res","json","useCharactersMetadata","filterGroups","useFilteredData","enabledFilters","every","fg","ef","some","filterData","useStagesMetadata","useRankTableData","currentCount","key","count","b","table","minWidth","tableContainer","RankTable","rankedData","TableContainer","component","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","row","scope","cardContent","paddingBottom","float","marginRight","contentContainer","RankTableCard","Card","CardHeader","title","animation","style","marginBottom","CardContent","_val","index","Fragment","root","flexGrow","menuButton","SiteAppBar","AppBar","Typography","variant","target","href","createStyles","HomePage","stageMetadata","isStageMetadataLoading","characterMetadata","isCharacterMetadataLoading","isDataLoading","filteredData","Grid","container","item","lg","xs","md","createMuiTheme","palette","primary","main","purple","secondary","green","queryClient","QueryClient","App","QueryClientProvider","client","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEe,SAASA,EACtBC,EACAC,GAEA,IACMC,EAAMC,IAAMC,cAAc,CAC9BC,MAAOJ,EACPK,SAHkD,kBAAML,KAY1D,MAAO,CAACC,EANR,SAAkBK,GAAqC,IAAD,EAC1BJ,IAAMK,WAE9BR,EAASC,GAHyC,mBAC7CI,EAD6C,KACtCC,EADsC,KAIpD,OAAO,cAACJ,EAAIO,SAAL,aAAcC,MAAO,CAAEL,QAAOC,aAAgBC,MCbzD,I,EAkD8BR,GAxCd,SAACM,EAAoBM,GACnC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAO,2BACFP,GADL,IAEEQ,QAASF,EAAOE,UAEpB,IAAK,SACL,IAAK,UAEH,YAAeC,IADAT,EAAMQ,QAAQE,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAON,EAAOO,YAEhDb,EAGF,2BACFA,GADL,IAEEQ,QAASR,EAAMQ,QAAQM,KAAI,SAACH,GAC1B,OAAOA,EAAEC,KAAON,EAAOO,SAAhB,2BAEEF,GAFF,IAGDI,QAAyB,YAAhBT,EAAOC,OAElBI,OAIV,IAAK,SACH,OAAO,2BACFX,GADL,IAEEQ,QAAQ,YACHR,EAAMQ,QAAQQ,QAAO,SAACL,GAAD,OACtBL,EAAOE,QAAQE,MAAK,SAACO,GAAD,OAAOA,EAAEL,KAAOD,EAAEC,YAI9C,QACE,MAAM,IAAIM,MAAJ,kCA9CgC,CAC1CV,QAAS,K,mBAiDJX,E,KAAKsB,E,KACCC,EAAgBvB,EAEdsB,I,ECZiBzB,GA5BhB,SAACM,EAAsBM,GACrC,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,2BACFP,GADL,IAEEqB,OAAQf,EAAOe,SAEnB,IAAK,gBACH,OAAO,2BACFrB,GADL,IAEEsB,WAAYhB,EAAOgB,aAEvB,IAAK,qBACH,IAAMC,EAAgBjB,EAAOkB,KAC1BR,QAAO,SAACS,EAAGC,EAAGC,GAAP,OAAeA,EAAIC,WAAU,SAACC,GAAD,OAAOA,EAAEC,OAASL,EAAEK,UAAUJ,KAClEZ,KAAI,SAACW,GAAD,OAAO,IAAIM,KAAKN,EAAEK,SACtBE,OAIH,OAFAC,QAAQC,IAAIX,GAELvB,EAGT,QACE,MAAM,IAAIkB,MAAJ,kCArCmB,CAC7BG,OAAQ,GACRC,WAAY,GACZa,QAAS,GACTC,aAAc,K,mBAqCTvC,E,KAAKwC,E,KACCC,EAAkBzC,EAEhBwC,ICpBAE,EADK,CAvBe,CACjC3B,GAAI,eACJ4B,MAAO,gBACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,IAAMC,EAAU,IAAIb,KAAKY,EAAKb,MACxBe,EAAQ,IAAId,KAClB,OAAOa,EAAQE,aAAeD,EAAMC,aAKV,CAC5BlC,GAAI,UACJ4B,MAAO,WACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,OAAO,KC+BII,EANM,CA5CmB,CACtCnC,GAAI,mBACJ4B,MAAO,oBACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,OAAOA,EAAKK,SAAW,KAKM,CAC/BpC,GAAI,aACJ4B,MAAO,kBACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,OAAOA,EAAKK,SAAW,IAAML,EAAKK,SAAW,KAKpB,CAC3BpC,GAAI,SACJ4B,MAAO,cACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,OAAOA,EAAKK,SAAW,IAAML,EAAKK,SAAW,KAKZ,CACnCpC,GAAI,iBACJ4B,MAAO,uBACPzB,SAAS,EACT0B,WAAW,EACXC,UAAW,SAACC,GACV,OAAOA,EAAKK,SAAW,MCtCZC,EADC,sBAAOV,GAAP,YAAuBQ,I,qDCMjCG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,gBAAiB,UACjBC,QAAS,OACTC,SAAU,OACVC,QAASL,EAAMM,QAAQ,IACvBC,WAAYP,EAAMQ,YAAYC,OAC5B,CAAC,UAAW,aAAc,oBAC1B,CACEC,OAAQV,EAAMQ,YAAYE,OAAOC,UACjCC,SAAUZ,EAAMQ,YAAYI,SAASC,QAGzCC,SAAU,UAEZC,cAAe,CACbb,gBAAiB,UACjBG,QAAS,EACTW,YAAahB,EAAMM,QAAQ,IAC3BW,UAAW,EACXV,WAAYP,EAAMQ,YAAYC,OAC5B,CAAC,UAAW,aAAc,oBAC1B,CACEC,OAAQV,EAAMQ,YAAYE,OAAOQ,OACjCN,SAAUZ,EAAMQ,YAAYI,SAASC,SAI3CM,KAAM,CACJC,OAAQpB,EAAMM,QAAQ,KAExBe,WAAY,CACVlB,QAAS,YA6EEmB,EAzEO,SAAC,GAMhB,IAAD,MALJC,eAKI,aAJJnE,eAII,MAJM,GAIN,IAC8BV,IAAM8E,SAASD,GAD7C,mBACGE,EADH,KACcC,EADd,OAEwBhF,IAAMiF,WAAW3D,GAArCpB,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,SACT+E,EAAU9B,IAEhBpD,IAAMmF,WAAU,WACdhF,EAAS,CAAEM,KAAM,MAAOC,cACvB,CAACP,EAAUO,IAyBd,OAAKqE,GAAa7E,EAAMQ,QAAQ0E,QAAU,EACjC,KAIP,eAACC,EAAA,EAAD,CACEC,UAAWC,YAAKL,EAAQ3B,SAAUwB,GAAaG,EAAQb,eADzD,UAGE,cAACmB,EAAA,EAAD,CAAYC,QAAS,kBAAMT,GAAcD,IAAzC,SACE,cAAC,IAAD,MAJJ,UAMG7E,EAAMQ,eANT,aAMG,EAAeM,KAAI,SAACE,GACnB,OACE,cAACwE,EAAA,EAAD,CAEEhD,MAAOxB,EAAOwB,MACd4C,UAAWC,YACTL,EAAQT,MACPM,IAAc7D,EAAOD,SAAWiE,EAAQP,YAE3CgB,UACGZ,GAAa7D,EAAOyB,UACjB,kBA7CMiD,EA6Ca1E,EAAOJ,QA5CxCX,EAAS,CACPM,KAAM,UACNM,SAAU6E,IAHO,IAACA,QA8CNjF,EAEN8E,QAASV,EAAY,kBAzCX,SAAC7D,GACfuB,EAAY7B,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOI,EAAOJ,OAC3B2B,EAAYvB,QAAO,SAACL,GAAD,OAAOA,EAAEC,KAAOI,EAAOJ,MAClD+E,SAAQ,SAAChF,GACdV,EAAS,CACPM,KAAMS,EAAOD,QAAU,SAAW,UAClCF,SAAUF,EAAEC,QAIlBX,EAAS,CACPM,KAAMS,EAAOD,QAAU,UAAY,SACnCF,SAAUG,EAAOJ,KA6BgBgF,CAAY5E,SAAUP,EACjDoF,MAAO7E,EAAOD,QAAU,eAAYN,EACpCqF,KAAMjB,EAAY,SAAW,SAbxB7D,EAAOJ,W,6CCtDTmF,EAvCO,SAAC,GAIhB,IAHLC,EAGI,EAHJA,aAIA,OACE,cAAC,IAAD,CACExE,KAAMwE,EACNxB,OAAQ,CAAEyB,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,KACjD1C,QAAS,EACT2C,OAAQ,CAAEC,OAAQ,QAClBC,UAAU,WACVC,WAAW,KACXC,QAAS,CACPC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,eAAgB,SAChBC,cAAe,GACfC,OAAQ,SAAU3G,GAChB,OAAO4G,IAAO5G,GAAO2G,OAAO,cAGhCE,WAAY,CACVR,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,GACRC,eAAgB,SAChBC,aAAc,GACdC,OAAQ,SAAU3G,GAChB,OAAO4G,IAAO5G,GAAO2G,OAAO,iBCavBG,EAXS,SACtB3F,GAEA,YAAaf,IAATe,EACK,GAvCK,SAACA,GAgCf,OA/BqB4F,MAAMC,KACzB7F,EAAK8F,QAAO,SAACC,EAAKC,GAChB,IAAMC,EAAYF,EAAIG,IAAIF,EAAIG,aAE9B,QAAkBlH,IAAdgH,EACFF,EAAIK,IAAIJ,EAAIG,YAAa,CACvB,CACEE,EAAGL,EAAI1F,KACPgG,EAAG,SAGF,CACL,IAAMC,EAAYN,EAAUzG,QAAO,SAACS,GAAD,OAAOA,EAAEoG,IAAML,EAAI1F,QAC7B,IAArBiG,EAAU7C,OACZqC,EAAIK,IAAIJ,EAAIG,YAAZ,sBACKF,EAAUzG,QAAO,SAACS,GAAD,OAAOA,EAAEoG,IAAML,EAAI1F,SADzC,CAEE,CAAE+F,EAAGL,EAAI1F,KAAMgG,EAAG,MAEU,IAArBC,EAAU7C,QACnBqC,EAAIK,IAAIJ,EAAIG,YAAZ,sBACKF,EAAUzG,QAAO,SAACS,GAAD,OAAOA,EAAEoG,IAAML,EAAI1F,SADzC,CAEE,CAAE+F,EAAGL,EAAI1F,KAAMgG,EAAGC,EAAU,GAAGD,EAAI,MAKzC,OAAOP,IACN,IAAIS,MACP,yCAAmB,CAAEpH,GAArB,KAA8BY,KAA9B,SAamByG,CAAQzG,ICWhB0G,EAZQ,SACrB1G,EACA2G,GAEA,YAAa1H,IAATe,EACK,CAAE4G,KAAM,WA9CH,SACd5G,EACA2G,GAEA,IAAME,EAAWjB,MAAMC,KACrB7F,EAAK8F,QAAO,SAACC,EAAKC,GAAS,IAAD,IAClBc,GACJ,UAAAH,EAAS9G,OAAOX,MAAK,SAACO,GAAD,OAAOA,EAAEL,KAAO4G,EAAIxE,kBAAzC,eAAmDsF,QAAnD,gBACSd,EAAIxE,SACTuF,EAAehB,EAAIG,IAAIY,GACvBE,GACJ,UAAAL,EAAS7G,WAAWZ,MAAK,SAAC+H,GAAD,OAAOA,EAAE7H,KAAO4G,EAAIG,sBAA7C,eAA2DS,OAC3DZ,EAAIG,YACN,QAAqBlH,IAAjB8H,EACFhB,EAAIK,IAAIU,EAAO,CAAC,CAAEF,KAAMI,EAAeE,IAAK,SACvC,CAAC,IAAD,IACCC,EAAkB,UAAGJ,EAAa7H,MACtC,SAAC+H,GAAD,OAAOA,EAAEL,OAASI,YADI,QAEnB,CACHJ,KAAMI,EACNE,IAAK,GAGPnB,EAAIK,IAAIU,EAAR,4BACOK,GADP,IAC2BD,KAAK,UAACC,EAAmBD,WAApB,QAA2B,GAAK,KADhE,mBAEKH,EAAavH,QAAO,SAACyH,GAAD,OAAOA,EAAEL,OAASI,QAI7C,OAAOjB,IACN,IAAIS,MACP,yCAAmB,CAAEI,KAArB,KAAgCQ,SAAhC,SAOF,MAL6B,CAC3BR,KAAM,2BACNQ,SAAS,YAAKP,IAcCJ,CAAQzG,EAAM2G,I,SClClBU,EAdM/I,IAAMgJ,MAAK,YAAsC,IAAnCtH,EAAkC,EAAlCA,KACjC,OACE,cAAC,IAAD,CACEA,KAAMA,EACNuH,SAAS,OACT1I,MAAM,MACNmE,OAAQ,CAAEyB,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChD5D,MAAM,KACNwG,cAAe,GACfC,eAAe,aCDf/F,EAAYC,YAAW,CAC3B+F,eAAgB,CACdC,OAAQ,IACRC,MAAO,OACP7F,QAAS,OACT8F,eAAgB,SAChBC,WAAY,UAEdC,eAAgB,CACdC,UAAW,aACXL,OAAQ,MACRC,MAAO,SAgCIK,EA5BG,SAAC,GAMZ,IALLjI,EAKI,EALJA,KAKI,IAJJkI,iBAII,SACWC,EAAoB7J,IAAMiF,WAAWzC,GAA5CtC,MACO4J,EAAkB9J,IAAMiF,WAAW3D,GAA1CpB,MACFgG,EAAemB,EAAgB3F,GAC/BqI,EAAc3B,EAAe1G,EAAMmI,GACnC3E,EAAU9B,IAEV4G,EACJF,EAAcpJ,QAAQQ,QAAO,SAACL,GAAD,MAAgB,iBAATA,EAAEC,IAAyBD,EAAEI,WAC9DmE,QAAU,EAEf,OACE,eAAC6E,EAAA,EAAD,CAAO3E,UAAWJ,EAAQkE,eAA1B,UACGQ,GAAa,cAACM,EAAA,EAAD,CAAU5E,UAAWJ,EAAQuE,kBACzCG,IAAcI,GACd,cAAC,EAAD,CAAe9D,aAAcA,KAE7B0D,GAAaI,GAAe,cAAC,EAAD,CAActI,KAAMqI,Q,oCCvCzCI,GATW,WACxB,OAAOC,aAAS,iBAAD,uBAAmB,4BAAAC,EAAA,sEACdC,MAChB,sEAF8B,cAC1BC,EAD0B,yBAIzBA,EAAIC,QAJqB,6CCQrBC,GATe,WAC5B,OAAOL,aAAS,aAAD,uBAAe,4BAAAC,EAAA,sEACVC,MAChB,0DAF0B,cACtBC,EADsB,yBAIrBA,EAAIC,QAJiB,6CCE1BE,GAAe,CAACjI,EAAaQ,GAiCpB0H,GAfS,SACtBjJ,EACAhB,GAEA,YAAaC,IAATe,EACK,QAGOf,IAAZD,GAAyBA,EAAQ0E,QAAU,EACtC1D,EAzBQ,SACjBA,EACAhB,GAEA,IAAMkK,EAAiBlK,EAAQQ,QAAO,SAACL,GAAD,OAAOA,EAAEI,WAS/C,OARqBS,EAAKR,QAAO,SAACS,GAAD,OAC/B+I,GAAaG,OAAM,SAACC,GAAD,OACjBA,EACG5J,QAAO,SAACL,GAAD,cAAO+J,QAAP,IAAOA,OAAP,EAAOA,EAAgBhK,MAAK,SAACmK,GAAD,OAAQA,EAAGjK,KAAOD,EAAEC,SACvDkK,MAAK,SAACnK,GAAD,OAAOA,EAAE+B,UAAUjB,YAkBVsJ,CAAWvJ,EAAMhB,ICvBzBwK,GATW,WACxB,OAAOd,aAAS,SAAD,uBAAW,4BAAAC,EAAA,sEACNC,MAChB,sDAFsB,cAClBC,EADkB,yBAIjBA,EAAIC,QAJa,6C,8BCmCbW,GAZU,SACvBzJ,EACA2G,GAEA,YAAa1H,IAATe,EACK,GA5BK,SACdA,EACA2G,GAkBA,OAhBiBf,MAAMC,KACrB7F,EAAK8F,QAAO,SAACC,EAAKC,GAChB,IAAM0D,EAAe3D,EAAIG,IAAIF,EAAIG,aAEjC,OADAJ,EAAIK,IAAIJ,EAAIG,YAAauD,EAAeA,EAAe,EAAI,GACpD3D,IACN,IAAIS,MACP,YAAmB,IAAD,qBAAhBmD,EAAgB,KAAX9K,EAAW,KAGhB,MAAO,CACLmI,eAFQ,OAARL,QAAQ,IAARA,GAAA,UAAAA,EAAU7G,WAAWZ,MAAK,SAAC+H,GAAD,OAAOA,EAAE7H,KAAOuK,YAA1C,eAAgD/C,OAAQ+C,EAGxDC,MAAO/K,MAGX2B,MAAK,SAACmI,EAAGkB,GAAJ,OAAUA,EAAED,MAAQjB,EAAEiB,SAaZnD,CAAQzG,EAAM2G,I,4DCrB3BjF,GAAYC,YAAW,CAC3BmI,MAAO,CACLC,SAAU,KAEZC,eAAgB,CACdrC,OAAQ,OACRC,MAAO,UA8BIqC,GA1BG,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,WACb1G,EAAU9B,KAChB,OACE,cAACyI,GAAA,EAAD,CAAgBC,UAAW7B,IAAO3E,UAAWJ,EAAQwG,eAArD,SACE,eAACK,GAAA,EAAD,CAAOzG,UAAWJ,EAAQsG,MAAOQ,cAAY,EAA7C,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,8BAGJ,cAACC,GAAA,EAAD,UACGT,EAAW5K,KAAI,SAACsL,GAAD,OACd,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWL,UAAU,KAAKS,MAAM,MAAhC,SACGD,EAAI5D,gBAEP,cAACyD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAIhB,UAJjBgB,EAAI5D,0BC3BzBtF,GAAYC,YAAW,CAC3BmJ,YAAa,CACX7I,QAAS,EACT,eAAgB,CACd8I,cAAe,IAGnBnG,KAAM,CACJoG,MAAO,QAETtG,MAAO,CACLsG,MAAO,QACPC,YAAa,OAEfC,iBAAkB,CAChBtI,YAAa,SA8DFuI,GA1DO,SAAC,GAMhB,IALLnL,EAKI,EALJA,KAKI,IAJJkI,iBAII,SACI1J,EAAUF,IAAMiF,WAAWzC,GAA3BtC,MACF0L,EAAaT,GAAiBzJ,EAAMxB,GACpCgF,EAAU9B,KAEhB,OACE,mCACE,eAAC0J,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,MACEpD,EACE,cAACM,EAAA,EAAD,CACE+C,UAAU,OACV5D,OAAQ,GACRC,MAAM,MACN4D,MAAO,CAAEC,aAAc,KAGzB,oBAIN,eAACC,GAAA,EAAD,CAAa9H,UAAWJ,EAAQsH,YAAhC,UACG5C,GACC,qBAAKtE,UAAWJ,EAAQ0H,iBAAxB,SACG,YAAItF,MAAM,KAAKtG,KAAI,SAACqM,EAAMC,GAAP,OAClB,eAAC,IAAMC,SAAP,WACE,cAACrD,EAAA,EAAD,CACE+C,UAAU,OACV5D,OAAQ,GACR6D,MAAO,CAAEC,aAAc,GACvB7D,MAAM,MACNhE,UAAWJ,EAAQoB,OAErB,cAAC4D,EAAA,EAAD,CACE+C,UAAU,OACV5D,OAAQ,GACRC,MAAM,MACNhE,UAAWJ,EAAQkB,QAErB,yBAdmBkH,SAmBzB1D,GAAa,cAAC,GAAD,CAAWgC,WAAYA,a,yCC1E1CxI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCkK,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVf,YAAarJ,EAAMM,QAAQ,IAE7BoJ,MAAO,CACLS,SAAU,OAsBCE,GAlBI,WACjB,IAAMzI,EAAU9B,KAChB,OACE,cAACwK,GAAA,EAAD,CAAQxJ,SAAS,SAAjB,SACE,eAACiB,EAAA,EAAD,WACE,cAACwI,GAAA,EAAD,CAAYC,QAAQ,KAAKxI,UAAWJ,EAAQ8H,QAC5C,cAACxH,EAAA,EAAD,CACEO,MAAM,UACNgI,OAAO,SACPC,KAAM,yCAHR,SAKE,cAAC,KAAD,YCZJ5K,GAAYC,aAAW,SAACC,GAAD,OAC3B2K,YAAa,CACXT,KAAM,CACJC,SAAU,EACV9J,QAAS,YA+DAuK,GA1DE,WAAM,IAEb/N,EAAaH,IAAMiF,WAAWzC,GAA9BrC,SACO2J,EAAkB9J,IAAMiF,WAAW3D,GAA1CpB,MAHa,EASjBgL,KAFIiD,EAPa,EAOnBzM,KACW0M,EARQ,EAQnBxE,UARmB,EAajBa,KAFI4D,EAXa,EAWnB3M,KACW4M,EAZQ,EAYnB1E,UAZmB,EAcsBO,KAAnCzI,EAda,EAcbA,KAAiB6M,EAdJ,EAcP3E,UAER4E,EAAe7D,GAAgBjJ,EAAMoI,EAAcpJ,SACnDwE,EAAU9B,KAEhBpD,IAAMmF,WAAU,WACTiJ,GACHjO,EAAS,CAAEM,KAAM,YAAac,OAAQ4M,IAGnCG,GACHnO,EAAS,CAAEM,KAAM,gBAAiBe,WAAY6M,MAE/C,CACDlO,EACAkO,EACAC,EACAF,EACAD,IAGF,IAAMvE,EACJwE,GAA0BE,GAA8BC,EAE1D,OACE,qCACE,cAAC,GAAD,IACA,qBAAKjJ,UAAWJ,EAAQsI,KAAxB,SACE,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAAC9K,QAAS,EAAzB,UACE,cAAC6K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,EAAD,CAAelO,QAASA,MAE1B,cAAC+N,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,GAAD,CAAepN,KAAM8M,EAAc5E,UAAWA,MAEhD,cAAC6E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,EAAD,CAAWpN,KAAM8M,EAAc5E,UAAWA,e,8DC5DvCtG,GAXDyL,aAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAMC,KAAO,MAEfC,UAAW,CACTF,KAAMG,KAAM,SCFZC,GAAc,IAAIC,IAkBTC,GAhBH,WACV,OACE,mCACE,cAACC,EAAA,EAAD,CAAqBC,OAAQJ,GAA7B,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAACK,GAAA,EAAD,CAAerM,MAAOA,GAAtB,SACE,cAAC,GAAD,eCHCsM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.01128240.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function createCtx<StateType, ActionType>(\n  reducer: React.Reducer<StateType, ActionType>,\n  initialState: StateType\n) {\n  const defaultDispatch: React.Dispatch<ActionType> = () => initialState; // we never actually use this\n  const ctx = React.createContext({\n    state: initialState,\n    dispatch: defaultDispatch, // just to mock out the dispatch type and make it not optioanl\n  });\n\n  function Provider(props: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer<\n      React.Reducer<StateType, ActionType>\n    >(reducer, initialState);\n    return <ctx.Provider value={{ state, dispatch }} {...props} />;\n  }\n  return [ctx, Provider] as const;\n}\n","import createCtx from './createCtx';\nimport { Filter } from '../filters/types';\n\nconst initialState: { filters: Filter[] } = {\n  filters: [],\n};\ntype FilterState = typeof initialState;\ntype Action =\n  | { type: 'add'; filters: Filter[] }\n  | { type: 'remove'; filters: Filter[] }\n  | { type: 'enable'; filterId: string }\n  | { type: 'disable'; filterId: string };\n\nconst reducer = (state: FilterState, action: Action): FilterState => {\n  switch (action.type) {\n    case 'add':\n      return {\n        ...state,\n        filters: action.filters,\n      };\n    case 'enable':\n    case 'disable': {\n      const filter = state.filters.find((f) => f.id === action.filterId);\n      if (filter === undefined) {\n        return state;\n      }\n\n      return {\n        ...state,\n        filters: state.filters.map((f) => {\n          return f.id === action.filterId\n            ? {\n                ...f,\n                enabled: action.type === 'disable' ? false : true,\n              }\n            : f;\n        }),\n      };\n    }\n    case 'remove':\n      return {\n        ...state,\n        filters: [\n          ...state.filters.filter((f) =>\n            action.filters.find((s) => s.id === f.id)\n          ),\n        ],\n      };\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, FilterProvider] = createCtx(reducer, initialState);\nexport const FilterContext = ctx;\n\nexport default FilterProvider;\n","import { Character, Stage, SelectedCharacterBonus, Metadata } from '../types';\nimport createCtx from './createCtx';\n\nconst initialState: Metadata = {\n  stages: [],\n  characters: [],\n  stories: [],\n  currentMonth: '',\n};\n\ntype MetadataState = typeof initialState;\ntype Action =\n  | { type: 'setStages'; stages: Stage[] }\n  | { type: 'setCharacters'; characters: Character[] }\n  | { type: 'calculateLastMonth'; data: SelectedCharacterBonus[] };\n\nconst reducer = (state: MetadataState, action: Action): MetadataState => {\n  switch (action.type) {\n    case 'setStages':\n      return {\n        ...state,\n        stages: action.stages,\n      };\n    case 'setCharacters':\n      return {\n        ...state,\n        characters: action.characters,\n      };\n    case 'calculateLastMonth': {\n      const distinctDates = action.data\n        .filter((d, i, arr) => arr.findIndex((t) => t.date === d.date) === i)\n        .map((d) => new Date(d.date))\n        .sort();\n\n      console.log(distinctDates);\n\n      return state;\n    }\n\n    default:\n      throw new Error(`Uknown action type provided`);\n  }\n};\n\nconst [ctx, MetadataProvider] = createCtx(reducer, initialState);\nexport const MetadataContext = ctx;\n\nexport default MetadataProvider;\n","import { SelectedCharacterBonus } from '../types';\nimport { Filter } from './types';\n\nconst currentMonthFilter: Filter = {\n  id: 'currentMonth',\n  label: 'Current Month',\n  enabled: true,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus) => {\n    const theDate = new Date(term.date);\n    const today = new Date();\n    return theDate.getMonth() === today.getMonth();\n  },\n};\nexport { currentMonthFilter };\n\nconst allTimeFilter: Filter = {\n  id: 'allTime',\n  label: 'All Time',\n  enabled: false,\n  canDelete: false,\n  predicate: (term: SelectedCharacterBonus) => {\n    return true;\n  },\n};\nexport { allTimeFilter };\nconst timeFilters = [currentMonthFilter, allTimeFilter];\nexport default timeFilters;\n","import { SelectedCharacterBonus } from '../types';\nimport { Filter } from './types';\n\nconst dimensionalClashdFilter: Filter = {\n  id: 'dimensionalClash',\n  label: 'Dimensional Clash',\n  enabled: false,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId <= 20;\n  },\n};\nexport { dimensionalClashdFilter };\n\nconst trueShieldFilter: Filter = {\n  id: 'trueShield',\n  label: 'The True SHIELD',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 21 && term.stageId <= 24;\n  },\n};\nexport { trueShieldFilter };\n\nconst allWarFilter: Filter = {\n  id: 'allWar',\n  label: 'The All-War',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 25 && term.stageId <= 28;\n  },\n};\nexport { allWarFilter };\n\nconst futureEndsHereFilter: Filter = {\n  id: 'futureEndsHere',\n  label: 'The Future Ends Here',\n  enabled: true,\n  canDelete: true,\n  predicate: (term: SelectedCharacterBonus) => {\n    return term.stageId >= 29;\n  },\n};\nexport { futureEndsHereFilter };\n\nconst storyFilters = [\n  dimensionalClashdFilter,\n  trueShieldFilter,\n  allWarFilter,\n  futureEndsHereFilter,\n];\nexport default storyFilters;\n","import timeFilters from './timeFilters';\nimport storyFilters from './storyFilters';\n\nconst allFilters = [...timeFilters, ...storyFilters];\nexport default allFilters;\n","import { Toolbar, IconButton, Chip } from '@material-ui/core';\nimport React from 'react';\nimport { Filter } from '../filters/types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport FilterIcon from '@material-ui/icons/FilterList';\nimport { FilterContext } from '../context/filterContext';\nimport timeFilters from '../filters/timeFilters';\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    backgroundColor: '#f5f5f5',\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n    position: 'sticky',\n  },\n  toolbarHidden: {\n    backgroundColor: 'inherit',\n    padding: 0,\n    paddingLeft: theme.spacing(0.5),\n    minHeight: 0,\n    transition: theme.transitions.create(\n      ['padding', 'min-height', 'background-color'],\n      {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.short,\n      }\n    ),\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  chipHidden: {\n    display: 'none',\n  },\n}));\n\nconst FilterSection = ({\n  visible = false,\n  filters = [],\n}: {\n  visible?: boolean;\n  filters?: Filter[];\n}) => {\n  const [isVisible, setIsVisible] = React.useState(visible);\n  const { state, dispatch } = React.useContext(FilterContext);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    dispatch({ type: 'add', filters });\n  }, [dispatch, filters]);\n\n  const handleDelete = (chipId: string) => {\n    dispatch({\n      type: 'disable',\n      filterId: chipId,\n    });\n  };\n\n  const handleClick = (filter: Filter) => {\n    if (timeFilters.find((f) => f.id === filter.id)) {\n      const others = timeFilters.filter((f) => f.id !== filter.id);\n      others.forEach((f) => {\n        dispatch({\n          type: filter.enabled ? 'enable' : 'disable',\n          filterId: f.id,\n        });\n      });\n    }\n    dispatch({\n      type: filter.enabled ? 'disable' : 'enable',\n      filterId: filter.id,\n    });\n  };\n\n  if (!isVisible && state.filters.length <= 0) {\n    return null;\n  }\n\n  return (\n    <Toolbar\n      className={clsx(classes.toolbar, !isVisible && classes.toolbarHidden)}\n    >\n      <IconButton onClick={() => setIsVisible(!isVisible)}>\n        <FilterIcon />\n      </IconButton>\n      {state.filters?.map((filter) => {\n        return (\n          <Chip\n            key={filter.id}\n            label={filter.label}\n            className={clsx(\n              classes.chip,\n              !isVisible && !filter.enabled && classes.chipHidden\n            )}\n            onDelete={\n              !isVisible && filter.canDelete\n                ? () => handleDelete(filter.id)\n                : undefined\n            }\n            onClick={isVisible ? () => handleClick(filter) : undefined}\n            color={filter.enabled ? 'primary' : undefined}\n            size={isVisible ? 'medium' : 'small'}\n          />\n        );\n      })}\n    </Toolbar>\n  );\n};\n\nexport default FilterSection;\n","import React from 'react';\nimport { AreaBumpInputSerie, ResponsiveAreaBump } from '@nivo/bump';\nimport moment from 'moment';\n\nconst AreaBumpChart = ({\n  areaBumpData,\n}: {\n  areaBumpData: AreaBumpInputSerie[];\n}) => {\n  return (\n    <ResponsiveAreaBump\n      data={areaBumpData}\n      margin={{ top: 40, right: 100, bottom: 40, left: 100 }}\n      spacing={8}\n      colors={{ scheme: 'nivo' }}\n      blendMode=\"multiply\"\n      startLabel=\"id\"\n      axisTop={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: -36,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle',\n        legendOffset: 32,\n        format: function (value: string) {\n          return moment(value).format('MMM YYYY');\n        },\n      }}\n    />\n  );\n};\n\nexport default AreaBumpChart;\n","import { SelectedCharacterBonus } from '../../types';\nimport { AreaBumpInputSerie } from '@nivo/bump';\n\nconst prepare = (data: SelectedCharacterBonus[]): AreaBumpInputSerie[] => {\n  const areaBumpData = Array.from(\n    data.reduce((acc, val) => {\n      const usageData = acc.get(val.characterId);\n\n      if (usageData === undefined) {\n        acc.set(val.characterId, [\n          {\n            x: val.date,\n            y: 1,\n          },\n        ]);\n      } else {\n        const dataPoint = usageData.filter((d) => d.x === val.date);\n        if (dataPoint.length === 0) {\n          acc.set(val.characterId, [\n            ...usageData.filter((d) => d.x !== val.date),\n            { x: val.date, y: 1 },\n          ]);\n        } else if (dataPoint.length === 1) {\n          acc.set(val.characterId, [\n            ...usageData.filter((d) => d.x !== val.date),\n            { x: val.date, y: dataPoint[0].y + 1 },\n          ]);\n        }\n      }\n\n      return acc;\n    }, new Map<string, { x: string; y: number }[]>()),\n    ([key, value]) => ({ id: key, data: value })\n  );\n\n  return areaBumpData;\n};\n\nconst useAreaBumpData = (\n  data: SelectedCharacterBonus[]\n): AreaBumpInputSerie[] => {\n  if (data === undefined) {\n    return [];\n  }\n\n  const areaBumpData = prepare(data);\n  return areaBumpData;\n};\n\nexport default useAreaBumpData;\n","import { Metadata, SelectedCharacterBonus } from '../../types';\nimport { TreemapItem } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): TreemapItem => {\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const story =\n        metadata.stages.find((s) => s.id === val.stageId)?.story ||\n        `Stage ${val.stageId}`;\n      const currentStory = acc.get(story);\n      const characterName =\n        metadata.characters.find((c) => c.id === val.characterId)?.name ||\n        val.characterId;\n      if (currentStory === undefined) {\n        acc.set(story, [{ name: characterName, loc: 1 }]);\n      } else {\n        const storyCharacterItem = currentStory.find(\n          (c) => c.name === characterName\n        ) ?? {\n          name: characterName,\n          loc: 0,\n        };\n\n        acc.set(story, [\n          { ...storyCharacterItem, loc: (storyCharacterItem.loc ?? 0) + 1 },\n          ...currentStory.filter((c) => c.name !== characterName),\n        ]);\n      }\n\n      return acc;\n    }, new Map<string, TreemapItem[]>()),\n    ([key, value]) => ({ name: key, children: value })\n  );\n  const theData: TreemapItem = {\n    name: 'Character Bonus By Story',\n    children: [...rankData],\n  };\n\n  return theData;\n};\n\nconst useTreeMapData = (\n  data: SelectedCharacterBonus[],\n  metadata: Metadata\n): TreemapItem => {\n  if (data === undefined) {\n    return { name: 'No Data' };\n  }\n\n  const rankData = prepare(data, metadata);\n  return rankData;\n};\n\nexport default useTreeMapData;\n","import React from 'react';\nimport { ResponsiveTreeMap } from '@nivo/treemap';\nimport { TreemapItem } from './types';\n\nconst TreemapChart = React.memo(({ data }: { data: TreemapItem }) => {\n  return (\n    <ResponsiveTreeMap\n      data={data}\n      identity=\"name\"\n      value=\"loc\"\n      margin={{ top: 10, right: 10, bottom: 10, left: 10 }}\n      label=\"id\"\n      labelSkipSize={50}\n      labelTextColor=\"black\"\n    />\n  );\n});\n\nexport default TreemapChart;\n","import { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport AreaBumpChart from './AreaBumpChart';\nimport useAreaBumpData from './hooks/useAreaBumpData';\nimport useTreeMapData from './hooks/useTreeMapData';\nimport TreemapChart from './TreemapChart';\n\nconst useStyles = makeStyles({\n  graphContainer: {\n    height: 400,\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  graphSkeleteon: {\n    transform: 'scale(1,1)',\n    height: '90%',\n    width: '95%',\n  },\n});\n\nconst GraphCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state: metadataContext } = React.useContext(MetadataContext);\n  const { state: filterContext } = React.useContext(FilterContext);\n  const areaBumpData = useAreaBumpData(data);\n  const treeMapData = useTreeMapData(data, metadataContext);\n  const classes = useStyles();\n\n  const showTreemap =\n    filterContext.filters.filter((f) => f.id === 'currentMonth' && f.enabled)\n      .length >= 1;\n\n  return (\n    <Paper className={classes.graphContainer}>\n      {isLoading && <Skeleton className={classes.graphSkeleteon} />}\n      {!isLoading && !showTreemap && (\n        <AreaBumpChart areaBumpData={areaBumpData} />\n      )}\n      {!isLoading && showTreemap && <TreemapChart data={treeMapData} />}\n    </Paper>\n  );\n};\n\nexport default GraphCard;\n","import { useQuery } from 'react-query';\n\nconst useCharacterBonus = () => {\n  return useQuery('characterBonus', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/selectedcharacterbonus.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharacterBonus;\n","import { useQuery } from 'react-query';\n\nconst useCharactersMetadata = () => {\n  return useQuery('characters', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/characters.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useCharactersMetadata;\n","import storyFilters from '../../filters/storyFilters';\nimport timeFilters from '../../filters/timeFilters';\nimport { Filter } from '../../filters/types';\nimport { SelectedCharacterBonus } from '../../types';\n\nconst filterGroups = [timeFilters, storyFilters];\n\nconst filterData = (\n  data: SelectedCharacterBonus[],\n  filters: Filter[]\n): SelectedCharacterBonus[] => {\n  const enabledFilters = filters.filter((f) => f.enabled);\n  const filteredData = data.filter((d) =>\n    filterGroups.every((fg) =>\n      fg\n        .filter((f) => enabledFilters?.find((ef) => ef.id === f.id))\n        .some((f) => f.predicate(d))\n    )\n  );\n\n  return filteredData;\n};\n\nconst useFilteredData = (\n  data?: SelectedCharacterBonus[],\n  filters?: Filter[]\n): SelectedCharacterBonus[] => {\n  if (data === undefined) {\n    return [];\n  }\n\n  if (filters === undefined || filters.length <= 0) {\n    return data;\n  }\n  const filteredData = filterData(data, filters);\n  return filteredData;\n};\n\nexport default useFilteredData;\n","import { useQuery } from 'react-query';\n\nconst useStagesMetadata = () => {\n  return useQuery('stages', async () => {\n    const res = await fetch(\n      'https://chrischen86.github.io/mff-data/stages.json'\n    );\n    return res.json();\n  });\n};\n\nexport default useStagesMetadata;\n","import { Metadata, SelectedCharacterBonus } from '../../types';\nimport { BonusesCount } from '../types';\n\nconst prepare = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  const rankData = Array.from(\n    data.reduce((acc, val) => {\n      const currentCount = acc.get(val.characterId);\n      acc.set(val.characterId, currentCount ? currentCount + 1 : 1);\n      return acc;\n    }, new Map<string, number>()),\n    ([key, value]) => {\n      const characterName =\n        metadata?.characters.find((c) => c.id === key)?.name || key;\n      return {\n        characterName,\n        count: value,\n      };\n    }\n  ).sort((a, b) => b.count - a.count);\n\n  return rankData;\n};\n\nconst useRankTableData = (\n  data: SelectedCharacterBonus[],\n  metadata?: Metadata\n): BonusesCount[] => {\n  if (data === undefined) {\n    return [];\n  }\n\n  const rankData = prepare(data, metadata);\n  return rankData;\n};\n\nexport default useRankTableData;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { BonusesCount } from './types';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n  },\n  tableContainer: {\n    height: '30em',\n    width: '100%',\n  },\n});\n\nconst RankTable = ({ rankedData }: { rankedData: BonusesCount[] }) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      <Table className={classes.table} stickyHeader>\n        <TableHead>\n          <TableRow>\n            <TableCell>Character</TableCell>\n            <TableCell align=\"right\"># of stages</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rankedData.map((row) => (\n            <TableRow key={row.characterName}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.characterName}\n              </TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default RankTable;\n","import { Card, CardContent, CardHeader } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react';\nimport { MetadataContext } from '../context/metadataContext';\nimport { SelectedCharacterBonus } from '../types';\nimport useRankTableData from './hooks/useRankTableData';\nimport RankTable from './RankTable';\n\nconst useStyles = makeStyles({\n  cardContent: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0,\n    },\n  },\n  left: {\n    float: 'left',\n  },\n  right: {\n    float: 'right',\n    marginRight: '1em',\n  },\n  contentContainer: {\n    paddingLeft: '1em',\n  },\n});\n\nconst RankTableCard = ({\n  data,\n  isLoading = false,\n}: {\n  data: SelectedCharacterBonus[];\n  isLoading?: boolean;\n}) => {\n  const { state } = React.useContext(MetadataContext);\n  const rankedData = useRankTableData(data, state);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Card>\n        <CardHeader\n          title={\n            isLoading ? (\n              <Skeleton\n                animation=\"wave\"\n                height={30}\n                width=\"80%\"\n                style={{ marginBottom: 6 }}\n              />\n            ) : (\n              'Story Mode Rank'\n            )\n          }\n        />\n        <CardContent className={classes.cardContent}>\n          {isLoading && (\n            <div className={classes.contentContainer}>\n              {[...Array(20)].map((_val, index) => (\n                <React.Fragment key={index}>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    style={{ marginBottom: 6 }}\n                    width=\"50%\"\n                    className={classes.left}\n                  ></Skeleton>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    width=\"10%\"\n                    className={classes.right}\n                  />\n                  <br />\n                </React.Fragment>\n              ))}\n            </div>\n          )}\n          {!isLoading && <RankTable rankedData={rankedData} />}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default RankTableCard;\n","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst SiteAppBar = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}></Typography>\n        <IconButton\n          color=\"inherit\"\n          target=\"_blank\"\n          href={'https://github.com/chrischen86/mff-app'}\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default SiteAppBar;\n","import { Grid } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\nimport { FilterContext } from '../context/filterContext';\nimport { MetadataContext } from '../context/metadataContext';\n//import data from './__mocks__/data.json';\nimport filters from '../filters';\nimport FilterSection from './FilterSection';\nimport GraphCard from './GraphCard';\nimport useCharacterBonus from './hooks/useCharacterBonus';\nimport useCharactersMetadata from './hooks/useCharactersMetadata';\nimport useFilteredData from './hooks/useFilteredData';\nimport useStagesMetadata from './hooks/useStagesMetadata';\nimport RankTableCard from './RankTableCard';\nimport SiteAppBar from './SiteAppBar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: '1em',\n    },\n  })\n);\n\nconst HomePage = () => {\n  //Contexts\n  const { dispatch } = React.useContext(MetadataContext);\n  const { state: filterContext } = React.useContext(FilterContext);\n\n  //Fetch data\n  const {\n    data: stageMetadata,\n    isLoading: isStageMetadataLoading,\n  } = useStagesMetadata();\n  const {\n    data: characterMetadata,\n    isLoading: isCharacterMetadataLoading,\n  } = useCharactersMetadata();\n  const { data, isLoading: isDataLoading } = useCharacterBonus();\n\n  const filteredData = useFilteredData(data, filterContext.filters);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if (!isStageMetadataLoading) {\n      dispatch({ type: 'setStages', stages: stageMetadata });\n    }\n\n    if (!isCharacterMetadataLoading) {\n      dispatch({ type: 'setCharacters', characters: characterMetadata });\n    }\n  }, [\n    dispatch,\n    characterMetadata,\n    isCharacterMetadataLoading,\n    isStageMetadataLoading,\n    stageMetadata,\n  ]);\n\n  const isLoading =\n    isStageMetadataLoading && isCharacterMetadataLoading && isDataLoading;\n\n  return (\n    <>\n      <SiteAppBar />\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item lg={12}>\n            <FilterSection filters={filters} />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <RankTableCard data={filteredData} isLoading={isLoading} />\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <GraphCard data={filteredData} isLoading={isLoading} />\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/deepPurple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport HomePage from './components/HomePage';\nimport FilterProvider from './context/filterContext';\nimport MetadataProvider from './context/metadataContext';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n  return (\n    <>\n      <QueryClientProvider client={queryClient}>\n        <MetadataProvider>\n          <FilterProvider>\n            <ThemeProvider theme={theme}>\n              <HomePage />\n            </ThemeProvider>\n          </FilterProvider>\n        </MetadataProvider>\n      </QueryClientProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}